pacman::p_load (readr,     # Ler arquivos .csv
readxl,    # Ler arquivos .xlsx
dplyr,     # Manipulacao de dados
tidyr,     # Manipulacao de dados
ggplot2,   # Criacao de gráficos
scales,    # Uso de porcentages
stringr,   # Manipulacao de strings
lubridate) # Uso de dados
library(readr)
arrecadacao_cnae <- read_delim("1_raw_data/arrecadacao-cnae.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(arrecadacao_cnae)
arrecadacao_cnae <- read_delim("1_raw_data/arrecadacao-cnae.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(arrecadacao_cnae)
arrecadacao_estado <- read_delim("1_raw_data/arrecadacao-estado.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
arrecadacao_estado <- read_delim("1_raw_data/arrecadacao-estado.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(arrecadacao_estado)
arrecadacao_natureza <- read_delim("1_raw_data/arrecadacao-natureza.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(arrecadacao_natureza)
set_billing_id("central-stream-297218")
pacman::p_load (readr,        # Ler arquivos .csv
readxl,       # Ler arquivos .xlsx
dplyr,        # Manipulacao de dados
tidyr,        # Manipulacao de dados
ggplot2,      # Criacao de gráficos
scales,       # Uso de porcentages
stringr,      # Manipulacao de strings
lubridate,
basedosdados) # BigQuery from public data on Brazil
set_billing_id("central-stream-297218")
query <- "
SELECT
dados.ano as ano,
dados.mes as mes,
dados.sigla_uf AS sigla_uf,
diretorio_sigla_uf.nome AS sigla_uf_nome,
dados.tipo_consumo as tipo_consumo,
dados.numero_consumidores as numero_consumidores,
dados.consumo as consumo
FROM `basedosdados.br_mme_consumo_energia_eletrica.uf` AS dados
LEFT JOIN (SELECT DISTINCT sigla,nome  FROM `basedosdados.br_bd_diretorios_brasil.uf`) AS diretorio_sigla_uf
ON dados.sigla_uf = diretorio_sigla_uf.sigla
"
read_sql(query, billing_project_id = get_billing_id())
df <- read_sql(query, billing_project_id = get_billing_id())
View(df)
df %>%
group_by(tipo_consumo) %>%
summarise(total = sum(consumo))
df %>%
group_by(tipo_consumo, sigla_uf) %>%
summarise(total = sum(consumo))
View(arrecadacao_cnae)
D_Frota_por_UF_Municipio_COMBUSTIVEL_Novembro_2024 <- read_excel("1_raw_data/2_vehicle_fleet/D_Frota_por_UF_Municipio_COMBUSTIVEL_Novembro_2024.xlsx")
View(D_Frota_por_UF_Municipio_COMBUSTIVEL_Novembro_2024)
pacman::p_load (readr,        # Ler arquivos .csv
readxl,       # Ler arquivos .xlsx
dplyr,        # Manipulacao de dados
tidyr,        # Manipulacao de dados
ggplot2,      # Criacao de gráficos
scales,       # Uso de porcentages
stringr,      # Manipulacao de strings
lubridate,
basedosdados) # BigQuery from public data on Brazil
# Defina o seu projeto no Google Cloud
set_billing_id("central-stream-297218")
# Para carregar o dado direto no R
query <- "
SELECT
dados.id_municipio AS id_municipio,
diretorio_id_municipio.nome AS id_municipio_nome,
dados.sigla_uf as sigla_uf,
dados.populacao as populacao,
dados.area as area,
dados.taxa_alfabetizacao as taxa_alfabetizacao,
dados.indice_envelhecimento as indice_envelhecimento,
dados.idade_mediana as idade_mediana,
dados.razao_sexo as razao_sexo
FROM `basedosdados.br_ibge_censo_2022.municipio` AS dados
LEFT JOIN (SELECT DISTINCT id_municipio,nome  FROM `basedosdados.br_bd_diretorios_brasil.municipio`) AS diretorio_id_municipio
ON dados.id_municipio = diretorio_id_municipio.id_municipio
"
pop_city <- read_sql(query, billing_project_id = get_billing_id())
View(pop_city)
writexl::write_xlsx(pop_city, "./0_demographics/pop_city.xlsx")
write_csv(pop_city, "./0_demographics/pop_city.csv")
write_csv(pop_city, "./1_raw_data/0_demographics/pop_city.csv")
library(readxl)
D_Frota_por_UF_Municipio_COMBUSTIVEL_Novembro_2024 <- read_excel("1_raw_data/2_vehicle_fleet/D_Frota_por_UF_Municipio_COMBUSTIVEL_Novembro_2024.xlsx")
View(D_Frota_por_UF_Municipio_COMBUSTIVEL_Novembro_2024)
D_Frota_por_UF_Municipio_COMBUSTIVEL_Novembro_2024 <- read_excel("1_raw_data/2_vehicle_fleet/D_Frota_por_UF_Municipio_COMBUSTIVEL_Novembro_2024.xlsx")
pop_city <- read_csv("1_raw_data/0_demographics/pop_city.csv")
fleet_df_nov24 <- read_excel("1_raw_data/2_vehicle_fleet/D_Frota_por_UF_Municipio_COMBUSTIVEL_Novembro_2024.xlsx")
fleet_df_nov24 <- fleet_df_nov24 %>%
mutate(Município = id_municipio_nome)
fleet_df_nov24 <- fleet_df_nov24 %>%
mutate(id_municipio_nome = Município)
View(fleet_df_nov24)
fleet_df_pop <- left_join(fleet_df_nov24, pop_city, by=id_municipio_nome)
fleet_df_pop <- left_join(fleet_df_nov24, pop_city, by= "id_municipio_nome")
View(fleet_df_pop)
head(pop_city,10)
pop_city$id_municipio_nome <- pop_city$id_municipio_nome %>%
stringi::stri_trans_general("Latin-ASCII") %>%
toupper()
View(pop_city)
fleet_df_nov24 <- fleet_df_nov24 %>%
mutate(id_municipio_nome = Município)
fleet_df_pop <- left_join(fleet_df_nov24, pop_city, by= "id_municipio_nome")
fleet_df_nov24 <- read_excel("1_raw_data/2_vehicle_fleet/D_Frota_por_UF_Municipio_COMBUSTIVEL_Novembro_2024.xlsx")
pop_city <- read_csv("1_raw_data/0_demographics/pop_city.csv")
pop_city$id_municipio_nome <- pop_city$id_municipio_nome %>%
stringi::stri_trans_general("Latin-ASCII") %>%
toupper()
fleet_df_nov24 <- fleet_df_nov24 %>%
mutate(id_municipio_nome = Município)
fleet_df_pop <- left_join(fleet_df_nov24, pop_city, by= "id_municipio_nome")
View(fleet_df_pop)
fleet_df_nov24 <- read_excel("1_raw_data/2_vehicle_fleet/D_Frota_por_UF_Municipio_COMBUSTIVEL_Novembro_2024.xlsx")
fleet_df_nov24
fleet_state <- fleet_df_nov24 %>%
group_by(UF,`Combustível Veículo`) %>%
summarize(sum(`Qtd. Veículos`))
View(fleet_state)
fleet_state
vehicles_per_state <- fleet_state %>%
group_by(UF) %>%
summarise(total_vehicles = sum(Total))
fleet_state <- fleet_df_nov24 %>%
group_by(UF,`Combustível Veículo`) %>%
summarize(Total = sum(`Qtd. Veículos`))
vehicles_per_state <- fleet_state %>%
group_by(UF) %>%
summarise(total_vehicles = sum(Total))
View(vehicles_per_state)
electric_vehicles_per_state <- fleet_state %>%
filter(grepl("^ELETRICO", `Combustível Veículo`)) %>%
group_by(UF) %>%
summarise(total_electric_vehicles = sum(Total))
View(electric_vehicles_per_state)
View(vehicles_per_state)
electric_vehicles_per_state <- fleet_state %>%
filter(grepl("^ELETRICO", `Combustível Veículo`)) %>%
group_by(UF) %>%
summarise(total_electric_vehicles = sum(Total)) %>%
left_join(vehicles_per_state, by = "UF")
View(electric_vehicles_per_state)
electric_vehicles_per_state <- fleet_state %>%
filter(grepl("^ELETRICO", `Combustível Veículo`)) %>%
group_by(UF) %>%
summarise(total_electric_vehicles = sum(Total)) %>%
left_join(vehicles_per_state, by = "UF") %>%
mutate(percentage = total_electric_vehicles/total_vehicles )
electric_vehicles_per_state <- fleet_state %>%
filter(grepl("^ELETRICO", `Combustível Veículo`)) %>%
group_by(UF) %>%
summarise(total_electric_vehicles = sum(Total)) %>%
left_join(vehicles_per_state, by = "UF") %>%
mutate(percentage = scales::percent(total_electric_vehicles/total_vehicles, accuracy = 0.01))
electric_vehicles_per_state <- fleet_state %>%
filter(grepl("^ELETRICO", `Combustível Veículo`)) %>%
group_by(UF) %>%
summarise(total_electric_vehicles = sum(Total)) %>%
left_join(vehicles_per_state, by = "UF") %>%
mutate(percentage = scales::percent(total_electric_vehicles/total_vehicles, accuracy = 0.01)) %>%
filter(UF != "Sem Informação")
pacman::p_load (readr,        # Ler arquivos .csv
readxl,       # Ler arquivos .xlsx
dplyr,        # Manipulacao de dados
tidyr,        # Manipulacao de dados
ggplot2,      # Criacao de gráficos
scales,       # Uso de porcentages
stringr,      # Manipulacao de strings
lubridate,
basedosdados,
geobr,
sf) # BigQuery from public data on Brazil
list_geobr()
state_df <- geobr::read_state(year = 2022,
showProgress = FALSE)
state_df <- geobr::read_state(year = 2020,showProgress = FALSE)
View(state_df)
state_df <- geobr::read_state(year = 2020,showProgress = FALSE) %>%
state_df$UF <- state_df$name_state %>%
stringi::stri_trans_general("Latin-ASCII") %>%
toupper()
state_df <- geobr::read_state(year = 2020,showProgress = FALSE) %>%
state_df$name_state <- state_df$name_state %>%
stringi::stri_trans_general("Latin-ASCII") %>%
toupper()
state_df$UF <- state_df$name_state %>%
stringi::stri_trans_general("Latin-ASCII") %>%
toupper()
View(state_df)
electric_vehicles_per_state %>%
left_join(state_df, by = UF)
electric_vehicles_per_state %>%
left_join(state_df, by = "UF")
electric_vehicles_per_state %>%
left_join(state_df, by = "UF") %>%
select(-UF)
electric_vehicles_per_state <- electric_vehicles_per_state %>%
left_join(state_df, by = "UF") %>%
select(code_state, abbrev_state, name_state, code_region, name_region, geom, total_electric_vehicles, total_vehicles, percentage)
View(electric_vehicles_per_state)
ggplot() +
geom_sf(data=states, aes(fill=electric_vehicles_per_state$percentage), color= NA, size=.15) +
labs(subtitle="% of Electric Vehicles per State ", size=8) +
scale_fill_distiller(palette = "Blues", name="Life Expectancy", limits = c(65,80)) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=electric_vehicles_per_state, aes(fill=electric_vehicles_per_state$percentage), color= NA, size=.15) +
labs(subtitle="% of Electric Vehicles per State ", size=8) +
scale_fill_distiller(palette = "Blues", name="Life Expectancy", limits = c(65,80)) +
theme_minimal() +
no_axis
no_axis <- theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
ggplot() +
geom_sf(data=electric_vehicles_per_state, aes(fill=electric_vehicles_per_state$percentage), color= NA, size=.15) +
labs(subtitle="% of Electric Vehicles per State ", size=8) +
scale_fill_distiller(palette = "Blues", name="Life Expectancy", limits = c(65,80)) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=electric_vehicles_per_state, aes(fill=percentage), color= NA, size=.15) +
labs(subtitle="% of Electric Vehicles per State ", size=8) +
scale_fill_distiller(palette = "Blues", name="Life Expectancy", limits = c(65,80)) +
theme_minimal() +
no_axis
ggplot() +
geom_sf(data=electric_vehicles_per_state, aes(fill=percentage), color= NA, size=.15) +
labs(subtitle="% of Electric Vehicles per State ", size=8) +
scale_fill_distiller(palette = "Blues", name="Percentage", limits = c(65,80)) +
theme_minimal() +
no_axis
df <- utils::read.csv(system.file("extdata/br_states_lifexpect2017.csv", package = "geobr"), encoding = "UTF-8")
View(df)
states$name_state <- tolower(states$name_state)
df$uf <- tolower(df$uf)
# join the databases
states <- dplyr::left_join(states, df, by = c("name_state" = "uf"))
state_df$name_state <- tolower(states$name_state)
df$uf <- tolower(df$uf)
state_df$name_state <- tolower(states$name_state)
state_df$name_state <- tolower(state_df$name_state)
df$uf <- tolower(df$uf)
# join the databases
states <- dplyr::left_join(states, df, by = c("name_state" = "uf"))
# join the databases
states <- dplyr::left_join(state_df, df, by = c("name_state" = "uf"))
View(states)
ggplot() +
geom_sf(data=states, aes(fill=ESPVIDA2017), color= NA, size=.15) +
labs(subtitle="Life Expectancy at birth, Brazilian States, 2014", size=8) +
scale_fill_distiller(palette = "Blues", name="Life Expectancy", limits = c(65,80)) +
theme_minimal() +
no_axis
View(state_df)
electric_vehicles_per_state$name_state <- tolower(electric_vehicles_per_state$name_state)
ggplot() +
geom_sf(data=electric_vehicles_per_state, aes(fill=percentage), color= NA, size=.15) +
labs(subtitle="% of Electric Vehicles per State ", size=8) +
scale_fill_distiller(palette = "Blues", name="Percentage", limits = c(65,80)) +
theme_minimal() +
no_axis
View(states)
?stat_sf()
