fcast_TS_data <- fcast_TS$x %>%
cbind(fcast_TS$lower, fcast_TS$upper, fcast_TS$mean)
fcast_TS_df <- data.frame(
date = as.Date(time(fcast_TS_data)),
actual = as.numeric(fcast_TS_data[,1]),
TS_lower_80 = as.numeric(fcast_TS_data[,2]),
TS_lower_95 = as.numeric(fcast_TS_data[,3]),
TS_upper_80 = as.numeric(fcast_TS_data[,4]),
TS_upper_95 = as.numeric(fcast_TS_data[,5]),
TS_mean     = as.numeric(fcast_TS_data[,6])
)
# Testing data visualization
ggplot(fcast_ARIMA_df, aes(x = date, y = actual)) +
# Observed values from 2020 to 2025
geom_line(color = "black", size = 1) +
# ARIMA projections
geom_line(aes(y = ARIMA_mean), color = "blue", size = 0.8, linetype = "dashed") +
geom_ribbon(data = subset(fcast_ARIMA_df, is.na(actual)),
aes(ymin = ARIMA_lower_95, ymax = ARIMA_upper_95), fill = "blue", alpha = 0.2) +
geom_ribbon(data = subset(fcast_ARIMA_df, is.na(actual)),
aes(ymin = ARIMA_lower_80, ymax = ARIMA_upper_80), fill = "blue", alpha = 0.3) +
labs(title = "Time Series Data for 2020",
x = "Date",
y = "Value") +
theme_minimal() +
scale_x_date(date_breaks = "12 month", date_labels = "%Y") +
scale_y_continuous(labels = comma) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Testing data visualization
ggplot(fcast_ARIMA_df, aes(x = date, y = actual)) +
# Observed values from 2020 to 2025
geom_line(color = "black", size = 1) +
# ARIMA projections
geom_line(aes(y = ARIMA_mean), color = "blue", size = 0.8, linetype = "dashed") +
geom_ribbon(data = subset(fcast_ARIMA_df, is.na(actual)),
aes(ymin = ARIMA_lower_95, ymax = ARIMA_upper_95), fill = "blue", alpha = 0.2) +
geom_ribbon(data = subset(fcast_ARIMA_df, is.na(actual)),
aes(ymin = ARIMA_lower_80, ymax = ARIMA_upper_80), fill = "blue", alpha = 0.3) +
labs(title = "Projected Values: ARIMA Model",
x = "Date",
y = "Value") +
theme_minimal() +
scale_x_date(date_breaks = "12 month", date_labels = "%Y") +
scale_y_continuous(labels = comma) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Testing data visualization
ggplot(fcast_ARIMA_df, aes(x = date, y = actual)) +
# Observed values from 2020 to 2025
geom_line(color = "black", size = 1) +
# ARIMA projections
geom_line(aes(y = ARIMA_mean), color = "blue", size = 0.8, linetype = "dashed") +
geom_ribbon(data = subset(fcast_ARIMA_df, is.na(actual)),
aes(ymin = ARIMA_lower_95, ymax = ARIMA_upper_95), fill = "blue", alpha = 0.2) +
geom_ribbon(data = subset(fcast_ARIMA_df, is.na(actual)),
aes(ymin = ARIMA_lower_80, ymax = ARIMA_upper_80), fill = "blue", alpha = 0.3) +
# Plot labels and theme
labs(title = "Projected Values: ARIMA Model",
x = "Date",
y = "Value") +
theme_bw() +
scale_x_date(date_breaks = "12 month", date_labels = "%Y") +
scale_y_continuous(labels = comma) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Testing data visualization
ggplot(fcast_TS_df, aes(x = date, y = actual)) +
# Observed values from 2020 to 2025
geom_line(color = "black", size = 1) +
# ARIMA projections
geom_line(aes(y = TS_mean), color = "red", size = 0.8, linetype = "dashed") +
geom_ribbon(data = subset(fcast_TS_df, is.na(actual)),
aes(ymin = TS_lower_95, ymax = TS_upper_95), fill = "red", alpha = 0.2) +
geom_ribbon(data = subset(fcast_ARIMA_df, is.na(actual)),
aes(ymin = TS_lower_80, ymax = TS_upper_80), fill = "red", alpha = 0.3) +
# Plot labels and theme
labs(title = "Projected Values: TS Model",
x = "Date",
y = "Value") +
theme_bw() +
scale_x_date(date_breaks = "12 month", date_labels = "%Y") +
scale_y_continuous(labels = comma) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Testing data visualization
ggplot(fcast_TS_df, aes(x = date, y = actual)) +
# Observed values from 2020 to 2025
geom_line(color = "black", size = 1) +
# ARIMA projections
geom_line(aes(y = TS_mean), color = "red", size = 0.8, linetype = "dashed") +
geom_ribbon(data = subset(fcast_TS_df, is.na(actual)),
aes(ymin = TS_lower_95, ymax = TS_upper_95), fill = "red", alpha = 0.2) +
geom_ribbon(data = subset(fcast_TS_df, is.na(actual)),
aes(ymin = TS_lower_80, ymax = TS_upper_80), fill = "red", alpha = 0.3) +
# Plot labels and theme
labs(title = "Projected Values: TS Model",
x = "Date",
y = "Value") +
theme_bw() +
scale_x_date(date_breaks = "12 month", date_labels = "%Y") +
scale_y_continuous(labels = comma) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Testing data visualization
ggplot(fcast_ARIMA_df, aes(x = date, y = actual)) +
# Observed values from 2020 to 2025
geom_line(color = "black", size = 1) +
# ARIMA projections
geom_line(aes(y = ARIMA_mean), color = "blue", size = 0.8, linetype = "dashed") +
geom_ribbon(data = subset(fcast_ARIMA_df, is.na(actual)),
aes(ymin = ARIMA_lower_95, ymax = ARIMA_upper_95), fill = "blue", alpha = 0.2) +
geom_ribbon(data = subset(fcast_ARIMA_df, is.na(actual)),
aes(ymin = ARIMA_lower_80, ymax = ARIMA_upper_80), fill = "blue", alpha = 0.3) +
# TS projections
geom_line(aes(y = TS_mean), color = "red", size = 0.8, linetype = "dashed") +
geom_ribbon(data = subset(fcast_TS_df, is.na(actual)),
aes(ymin = TS_lower_95, ymax = TS_upper_95), fill = "red", alpha = 0.2) +
geom_ribbon(data = subset(fcast_TS_df, is.na(actual)),
aes(ymin = TS_lower_80, ymax = TS_upper_80), fill = "red", alpha = 0.3) +
# Plot labels and theme
labs(title = "Projected Values: ARIMA Model",
x = "Date",
y = "Value") +
theme_bw() +
scale_x_date(date_breaks = "12 month", date_labels = "%Y") +
scale_y_continuous(labels = comma) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Testing data visualization
ggplot(fcast_TS_df, aes(x = date, y = actual)) +
# Observed values from 2020 to 2025
geom_line(color = "black", size = 1) +
# TS projections
geom_line(aes(y = TS_mean), color = "red", size = 0.8, linetype = "dashed") +
geom_ribbon(data = subset(fcast_TS_df, is.na(actual)),
aes(ymin = TS_lower_95, ymax = TS_upper_95), fill = "red", alpha = 0.2) +
geom_ribbon(data = subset(fcast_TS_df, is.na(actual)),
aes(ymin = TS_lower_80, ymax = TS_upper_80), fill = "red", alpha = 0.3) +
# Plot labels and theme
labs(title = "Projected Values: TS Model",
x = "Date",
y = "Value") +
theme_bw() +
scale_x_date(date_breaks = "12 month", date_labels = "%Y") +
scale_y_continuous(labels = comma) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Extracting data from model
fcast_ETS_data <- fcast_ETS$x %>%
cbind(fcast_ETS$lower, fcast_ETS$upper, fcast_ETS$mean)
# Organizing data frame
fcast_ETS_df <- data.frame(
date = as.Date(time(fcast_TS_data)),
actual = as.numeric(fcast_TS_data[,1]),
ETS_lower_80 = as.numeric(fcast_TS_data[,2]),
ETS_lower_95 = as.numeric(fcast_TS_data[,3]),
ETS_upper_80 = as.numeric(fcast_TS_data[,4]),
ETS_upper_95 = as.numeric(fcast_TS_data[,5]),
ETS_mean     = as.numeric(fcast_TS_data[,6])
)
# Testing data visualization
ggplot(fcast_ETS_df, aes(x = date, y = actual)) +
# Observed values from 2020 to 2025
geom_line(color = "black", size = 1) +
# TS projections
geom_line(aes(y = ETS_mean), color = "red", size = 0.8, linetype = "dashed") +
geom_ribbon(data = subset(fcast_ETS_df, is.na(actual)),
aes(ymin = ETS_lower_95, ymax = ETS_upper_95), fill = "red", alpha = 0.2) +
geom_ribbon(data = subset(fcast_ETS_df, is.na(actual)),
aes(ymin = ETS_lower_80, ymax = ETS_upper_80), fill = "red", alpha = 0.3) +
# Plot labels and theme
labs(title = "Projected Values: ETS Model",
x = "Date",
y = "Value") +
theme_bw() +
scale_x_date(date_breaks = "12 month", date_labels = "%Y") +
scale_y_continuous(labels = comma) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Extracting data from model
fcast_ETS_data <- fcast_ETS$x %>%
cbind(fcast_ETS$lower, fcast_ETS$upper, fcast_ETS$mean)
# Organizing data frame
fcast_ETS_df <- data.frame(
date = as.Date(time(fcast_ETS_data)),
actual = as.numeric(fcast_ETS_data[,1]),
ETS_lower_80 = as.numeric(fcast_ETS_data[,2]),
ETS_lower_95 = as.numeric(fcast_ETS_data[,3]),
ETS_upper_80 = as.numeric(fcast_ETS_data[,4]),
ETS_upper_95 = as.numeric(fcast_ETS_data[,5]),
ETS_mean     = as.numeric(fcast_ETS_data[,6])
)
# Testing data visualization
ggplot(fcast_ETS_df, aes(x = date, y = actual)) +
# Observed values from 2020 to 2025
geom_line(color = "black", size = 1) +
# TS projections
geom_line(aes(y = ETS_mean), color = "orange", size = 0.8, linetype = "dashed") +
geom_ribbon(data = subset(fcast_ETS_df, is.na(actual)),
aes(ymin = ETS_lower_95, ymax = ETS_upper_95), fill = "orange", alpha = 0.2) +
geom_ribbon(data = subset(fcast_ETS_df, is.na(actual)),
aes(ymin = ETS_lower_80, ymax = ETS_upper_80), fill = "orange", alpha = 0.3) +
# Plot labels and theme
labs(title = "Projected Values: ETS Model",
x = "Date",
y = "Value") +
theme_bw() +
scale_x_date(date_breaks = "12 month", date_labels = "%Y") +
scale_y_continuous(labels = comma) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Testing data visualization
ggplot(fcast_ETS_df, aes(x = date, y = actual)) +
# Observed values from 2020 to 2025
geom_line(color = "black", size = 1) +
# TS projections
geom_line(aes(y = ETS_mean), color = "orange3", size = 0.8, linetype = "dashed") +
geom_ribbon(data = subset(fcast_ETS_df, is.na(actual)),
aes(ymin = ETS_lower_95, ymax = ETS_upper_95), fill = "orange3", alpha = 0.2) +
geom_ribbon(data = subset(fcast_ETS_df, is.na(actual)),
aes(ymin = ETS_lower_80, ymax = ETS_upper_80), fill = "orange3", alpha = 0.3) +
# Plot labels and theme
labs(title = "Projected Values: ETS Model",
x = "Date",
y = "Value") +
theme_bw() +
scale_x_date(date_breaks = "12 month", date_labels = "%Y") +
scale_y_continuous(labels = comma) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
fcast_Prophet
View(fcast_Prophet)
View(fcast_Prophet)
fcast_Prophet_data <- fcast_Prophet %>%
tail(60) %>%
select(yhat, yhat_lower, yhat_upper, trend_lower, trend_upper) %>%
rename(Prophet_lower_80      = yhat_lower,
Prophet_lower_95      = trend_lower,
Prophet_upper_80      = yhat_upper,
Prophet_upper_95      = trend_upper,
Prophet_mean          = yhat_upper)
View(fcast_Prophet)
View(fcast_Prophet_data)
fcast_Prophet_data <- fcast_Prophet %>%
tail(60) %>%
select(ds, yhat, yhat_lower, yhat_upper, trend_lower, trend_upper) %>%
rename(Prophet_lower_80      = yhat_lower,
Prophet_lower_95      = trend_lower,
Prophet_upper_80      = yhat_upper,
Prophet_upper_95      = trend_upper,
Prophet_mean          = yhat_upper)
fcast_Prophet_1 <- fcast_Prophet %>%
head(60) %>%
select(ds, yhat) %>%
rename(actual = yhat)
fcast_Prophet_2 <- fcast_Prophet %>%
tail(60) %>%
select(ds, yhat, yhat_lower, yhat_upper, trend_lower, trend_upper) %>%
rename(Prophet_lower_80      = yhat_lower,
Prophet_lower_95      = trend_lower,
Prophet_upper_80      = yhat_upper,
Prophet_upper_95      = trend_upper,
Prophet_mean          = yhat_upper)
fcast_Prohet_data <- fcast_Prophet_1 %>%
rbind(fcast_Prophet_2)
fcast_Prophet_1 <- fcast_Prophet %>%
head(60) %>%
select(ds, yhat, yhat_lower, yhat_upper, trend_lower, trend_upper) %>%
rename(actual = yhat) %>%
mutate(across(yhat_lower:trend_upper) = NA)
fcast_Prophet_1 <- fcast_Prophet %>%
head(60) %>%
select(ds, yhat, yhat_lower, yhat_upper, trend_lower, trend_upper) %>%
rename(actual = yhat) %>%
mutate(yhat_lower:trend_upper = NA)
fcast_Prophet_1 <- fcast_Prophet %>%
head(60) %>%
select(ds, yhat, yhat_lower, yhat_upper, trend_lower, trend_upper) %>%
rename(actual = yhat) %>%
mutate(across(c(yhat_lower, yhat_upper, trend_lower, trend_upper), ~NA))
fcast_Prohet_data <- fcast_Prophet_1 %>%
rbind(fcast_Prophet_2)
fcast_Prophet_1 <- fcast_Prophet %>%
head(60) %>%
select(ds, yhat, yhat_lower, yhat_upper, trend_lower, trend_upper) %>%
rename(actual = yhat) %>%
mutate(across(c(yhat_lower, yhat_upper, trend_lower, trend_upper), ~NA))
fcast_Prophet_2 <- fcast_Prophet %>%
tail(60) %>%
select(ds, yhat, yhat_lower, yhat_upper, trend_lower, trend_upper)
fcast_Prohet_data <- fcast_Prophet_1 %>%
rbind(fcast_Prophet_2) %>%
rename(Prophet_lower_80      = yhat_lower,
Prophet_lower_95      = trend_lower,
Prophet_upper_80      = yhat_upper,
Prophet_upper_95      = trend_upper,
Prophet_mean          = yhat_upper)
fcast_Prophet_1 <- fcast_Prophet %>%
head(60) %>%
select(ds, yhat, yhat_lower, yhat_upper, trend_lower, trend_upper) %>%
rename(actual = yhat) %>%
mutate(across(c(yhat_lower, yhat_upper, trend_lower, trend_upper), ~NA))
fcast_Prophet_2 <- fcast_Prophet %>%
tail(60) %>%
select(ds, yhat, yhat_lower, yhat_upper, trend_lower, trend_upper)
fcast_Prohet_data <- fcast_Prophet_1 %>%
rbind(fcast_Prophet_2) %>%
rename(Prophet_lower_80      = yhat_lower,
Prophet_lower_95      = trend_lower,
Prophet_upper_80      = yhat_upper,
Prophet_upper_95      = trend_upper,
Prophet_mean          = yhat_upper)
View(fcast_Prophet_1)
View(fcast_Prophet_2)
fcast_Prophet_1 <- fcast_Prophet %>%
head(60) %>%
select(ds, yhat, yhat_lower, yhat_upper, trend_lower, trend_upper) %>%
rename(actual = yhat) %>%
mutate(across(c(yhat_lower, yhat_upper, trend_lower, trend_upper), ~NA))
fcast_Prophet_2 <- fcast_Prophet %>%
tail(60) %>%
select(ds, yhat, yhat_lower, yhat_upper, trend_lower, trend_upper) %>%
rename(Prophet_lower_80      = yhat_lower,
Prophet_lower_95      = trend_lower,
Prophet_upper_80      = yhat_upper,
Prophet_upper_95      = trend_upper,
Prophet_mean          = yhat)
fcast_Prohet_data <- fcast_Prophet_1 %>%
rbind(fcast_Prophet_2)
View(fcast_Prophet_1)
View(fcast_Prophet_2)
fcast_Prophet_1 <- fcast_Prophet %>%
head(60) %>%
select(ds, yhat, yhat_lower, yhat_upper, trend_lower, trend_upper) %>%
rename(actual = yhat,
Prophet_lower_80      = yhat_lower,
Prophet_lower_95      = trend_lower,
Prophet_upper_80      = yhat_upper,
Prophet_upper_95      = trend_upper,
Prophet_mean          = yhat) %>%
mutate(across(c(yhat_lower, yhat_upper, trend_lower, trend_upper), ~NA))
fcast_Prophet_2 <- fcast_Prophet %>%
tail(60) %>%
select(ds, yhat, yhat_lower, yhat_upper, trend_lower, trend_upper) %>%
rename(Prophet_lower_80      = yhat_lower,
Prophet_lower_95      = trend_lower,
Prophet_upper_80      = yhat_upper,
Prophet_upper_95      = trend_upper,
Prophet_mean          = yhat)
fcast_Prophet_1 <- fcast_Prophet %>%
head(60) %>%
select(ds, yhat, yhat_lower, yhat_upper, trend_lower, trend_upper) %>%
mutate(across(c(yhat_lower, yhat_upper, trend_lower, trend_upper), ~NA)) %>%
rename(actual = yhat,
Prophet_lower_80      = yhat_lower,
Prophet_lower_95      = trend_lower,
Prophet_upper_80      = yhat_upper,
Prophet_upper_95      = trend_upper,
Prophet_mean          = yhat) %>%
fcast_Prophet_2 <- fcast_Prophet %>%
tail(60) %>%
select(ds, yhat, yhat_lower, yhat_upper, trend_lower, trend_upper) %>%
rename(Prophet_lower_80      = yhat_lower,
Prophet_lower_95      = trend_lower,
Prophet_upper_80      = yhat_upper,
Prophet_upper_95      = trend_upper,
Prophet_mean          = yhat)
fcast_Prophet_1 <- fcast_Prophet %>%
head(60) %>%
select(ds, yhat, yhat_lower, yhat_upper, trend_lower, trend_upper) %>%
mutate(across(c(yhat_lower, yhat_upper, trend_lower, trend_upper), ~NA)) %>%
rename(actual = yhat,
Prophet_lower_80      = yhat_lower,
Prophet_lower_95      = trend_lower,
Prophet_upper_80      = yhat_upper,
Prophet_upper_95      = trend_upper,
Prophet_mean          = yhat)
fcast_Prophet_2 <- fcast_Prophet %>%
tail(60) %>%
select(ds, yhat, yhat_lower, yhat_upper, trend_lower, trend_upper) %>%
rename(Prophet_lower_80      = yhat_lower,
Prophet_lower_95      = trend_lower,
Prophet_upper_80      = yhat_upper,
Prophet_upper_95      = trend_upper,
Prophet_mean          = yhat)
fcast_Prophet_1 <- fcast_Prophet %>%
head(60) %>%
select(ds, yhat, yhat_lower, yhat_upper, trend_lower, trend_upper) %>%
mutate(across(c(yhat_lower, yhat_upper, trend_lower, trend_upper), ~NA)) %>%
rename(actual = yhat,
Prophet_lower_80      = yhat_lower,
Prophet_lower_95      = trend_lower,
Prophet_upper_80      = yhat_upper,
Prophet_upper_95      = trend_upper)
fcast_Prophet_2 <- fcast_Prophet %>%
tail(60) %>%
select(ds, yhat, yhat_lower, yhat_upper, trend_lower, trend_upper) %>%
rename(Prophet_lower_80      = yhat_lower,
Prophet_lower_95      = trend_lower,
Prophet_upper_80      = yhat_upper,
Prophet_upper_95      = trend_upper,
Prophet_mean          = yhat)
fcast_Prohet_data <- full_join(fcast_Prophet_1,fcast_Prophet_2)
View(fcast_Prohet_data)
fcast_Prophet_data <- full_join(fcast_Prophet_1,fcast_Prophet_2)
fcast_Prophet_data <- full_join(fcast_Prophet_1,fcast_Prophet_2, by = "ds")
View(fcast_Prophet)
View(fcast_Prohet_data)
View(fcast_Prophet_data)
fcast_Prophet_data <- full_join(fcast_Prophet_1,fcast_Prophet_2)
View(fcast_Prophet_data)
View(fcast_Prophet)
# Testing data visualization
ggplot(fcast_Prophet_data, aes(x = date, y = actual)) +
# Observed values from 2020 to 2025
geom_line(color = "black", size = 1) +
# ARIMA projections
geom_line(aes(y = Prophet_mean), color = "brown4", size = 0.8, linetype = "dashed") +
geom_ribbon(data = subset(fcast_Prophet_data, is.na(actual)),
aes(ymin = Prophet_lower_95, ymax = Prophet_upper_95), fill = "brown4", alpha = 0.2) +
geom_ribbon(data = subset(fcast_Prophet_data, is.na(actual)),
aes(ymin = Prophet_lower_80, ymax = Prophet_upper_80), fill = "brown4", alpha = 0.3) +
# Plot labels and theme
labs(title = "Projected Values: Prophet Model",
x = "Date",
y = "Value") +
theme_bw() +
scale_x_date(date_breaks = "12 month", date_labels = "%Y") +
scale_y_continuous(labels = comma) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Testing data visualization
ggplot(fcast_Prophet_data, aes(x = ds, y = actual)) +
# Observed values from 2020 to 2025
geom_line(color = "black", size = 1) +
# ARIMA projections
geom_line(aes(y = Prophet_mean), color = "brown4", size = 0.8, linetype = "dashed") +
geom_ribbon(data = subset(fcast_Prophet_data, is.na(actual)),
aes(ymin = Prophet_lower_95, ymax = Prophet_upper_95), fill = "brown4", alpha = 0.2) +
geom_ribbon(data = subset(fcast_Prophet_data, is.na(actual)),
aes(ymin = Prophet_lower_80, ymax = Prophet_upper_80), fill = "brown4", alpha = 0.3) +
# Plot labels and theme
labs(title = "Projected Values: Prophet Model",
x = "Date",
y = "Value") +
theme_bw() +
scale_x_date(date_breaks = "12 month", date_labels = "%Y") +
scale_y_continuous(labels = comma) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
fcast_Prophet_data <- full_join(fcast_Prophet_1,fcast_Prophet_2) %>%
data.frame()
# Testing data visualization
ggplot(fcast_Prophet_data, aes(x = ds, y = actual)) +
# Observed values from 2020 to 2025
geom_line(color = "black", size = 1) +
# ARIMA projections
geom_line(aes(y = Prophet_mean), color = "brown4", size = 0.8, linetype = "dashed") +
geom_ribbon(data = subset(fcast_Prophet_data, is.na(actual)),
aes(ymin = Prophet_lower_95, ymax = Prophet_upper_95), fill = "brown4", alpha = 0.2) +
geom_ribbon(data = subset(fcast_Prophet_data, is.na(actual)),
aes(ymin = Prophet_lower_80, ymax = Prophet_upper_80), fill = "brown4", alpha = 0.3) +
# Plot labels and theme
labs(title = "Projected Values: Prophet Model",
x = "Date",
y = "Value") +
theme_bw() +
scale_x_date(date_breaks = "12 month", date_labels = "%Y") +
scale_y_continuous(labels = comma) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
View(fcast_TS_data)
View(fcast_Prophet_data)
head(forecast_Prophet_data,10)
head(fcast_Prophet_data,10)
fcast_Prophet_data <- full_join(fcast_Prophet_1,fcast_Prophet_2) %>%
# Organizing data frame
fcast_Prophet_df <- data.frame(
date = as.Date(fcast_Prophet_data$ds),
actual = as.numeric(fcast_ARIMA_data[,1]),
Prophet_lower_80 = as.numeric(fcast_Prophet_data$Prophet_lower_80),
Prophet_lower_95 = as.numeric(fcast_Prophet_data$Prophet_lower_95),
Prophet_upper_80 = as.numeric(fcast_Prophet_data$Prophet_upper_80),
Prophet_upper_95 = as.numeric(fcast_Prophet_data$Prophet_upper_95),
Prophet_mean     = as.numeric(fcast_Prophet_data$Prophet_mean)
)
fcast_Prophet_data <- full_join(fcast_Prophet_1,fcast_Prophet_2) %>%
# Organizing data frame
fcast_Prophet_df <- data.frame(
date = as.Date(fcast_Prophet_data$ds),
actual = as.numeric(fcast_ARIMA_data[,1]),
Prophet_lower_80 = as.numeric(fcast_Prophet_data$Prophet_lower_80),
Prophet_lower_95 = as.numeric(fcast_Prophet_data$Prophet_lower_95),
Prophet_upper_80 = as.numeric(fcast_Prophet_data$Prophet_upper_80),
Prophet_upper_95 = as.numeric(fcast_Prophet_data$Prophet_upper_95),
Prophet_mean     = as.numeric(fcast_Prophet_data$Prophet_mean))
fcast_Prophet_data <- full_join(fcast_Prophet_1,fcast_Prophet_2)
# Organizing data frame
fcast_Prophet_df <- data.frame(
date = as.Date(fcast_Prophet_data$ds),
actual = as.numeric(fcast_ARIMA_data[,1]),
Prophet_lower_80 = as.numeric(fcast_Prophet_data$Prophet_lower_80),
Prophet_lower_95 = as.numeric(fcast_Prophet_data$Prophet_lower_95),
Prophet_upper_80 = as.numeric(fcast_Prophet_data$Prophet_upper_80),
Prophet_upper_95 = as.numeric(fcast_Prophet_data$Prophet_upper_95),
Prophet_mean     = as.numeric(fcast_Prophet_data$Prophet_mean))
# Testing data visualization
ggplot(fcast_Prophet_df, aes(x = date, y = actual)) +
# Observed values from 2020 to 2025
geom_line(color = "black", size = 1) +
# ARIMA projections
geom_line(aes(y = Prophet_mean), color = "brown4", size = 0.8, linetype = "dashed") +
geom_ribbon(data = subset(fcast_Prophet_df, is.na(actual)),
aes(ymin = Prophet_lower_95, ymax = Prophet_upper_95), fill = "brown4", alpha = 0.2) +
geom_ribbon(data = subset(fcast_Prophet_df, is.na(actual)),
aes(ymin = Prophet_lower_80, ymax = Prophet_upper_80), fill = "brown4", alpha = 0.3) +
# Plot labels and theme
labs(title = "Projected Values: Prophet Model",
x = "Date",
y = "Value") +
theme_bw() +
scale_x_date(date_breaks = "12 month", date_labels = "%Y") +
scale_y_continuous(labels = comma) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
