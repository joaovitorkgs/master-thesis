fleet_df <- read_excel(file_path)
# Aggregate municipal data at state level
fleet_state <- fleet_df %>%
group_by(UF, `Combustível Veículo`) %>%
summarize(Total = sum(`Qtd. Veículos`), .groups = 'drop')
# Data frame of total vehicles per state
vehicles_per_state <- fleet_state %>%
group_by(UF) %>%
summarise(total_vehicles = sum(Total), .groups = 'drop')
# Categorize vehicles and calculate totals
vehicles_by_type <- fleet_state %>%
mutate(vehicle_type = case_when(
`Combustível Veículo` %in% c("ELETRICO", "ELETRICO/FONTE INTERNA") ~ "Electric",
grepl("/ELETRICO", `Combustível Veículo`) | `Combustível Veículo` == "ELETRICO/FONTE EXTERNA" ~ "Hybrid",
TRUE ~ "Other"
)) %>%
group_by(UF, vehicle_type) %>%
summarise(total = sum(Total), .groups = 'drop') %>%
pivot_wider(
names_from = vehicle_type,
values_from = total,
values_fill = 0
) %>%
left_join(vehicles_per_state, by = "UF") %>%
mutate(
# Adjust 2021 values
Electric = if(year == 2021) Electric/10 else Electric,
Hybrid = if(year == 2021) Hybrid/10 else Hybrid,
Other = if(year == 2021) Other/10 else Other,
total_vehicles = if(year == 2021) total_vehicles/10 else total_vehicles,
# Calculate percentages
electric_percentage = scales::percent(Electric/total_vehicles, accuracy = 0.01),
hybrid_percentage = scales::percent(Hybrid/total_vehicles, accuracy = 0.01),
year = year
) %>%
filter(UF != "Sem Informação")
return(vehicles_by_type)
}
# Process all files and combine results
all_results <- lapply(file_paths, process_file)
combined_results <- bind_rows(all_results)
# Prepare state data frame
state_df$UF <- state_df$name_state %>%
stringi::stri_trans_general("Latin-ASCII") %>%
toupper()
# Final join with geographic information
final_result <- combined_results %>%
left_join(state_df, by = "UF") %>%
select(year, code_state, abbrev_state, name_state, code_region,
name_region, geom, Electric, Hybrid, Other,
total_vehicles, electric_percentage, hybrid_percentage)
# Store the result in the global environment
assign("fleet_analysis_results", final_result, envir = .GlobalEnv)
return(final_result)
}
create_fleet_analysis_function(file_paths, state_df)
# 3.2 Creating data sets for the plots -----------------------------------------
# Aggregate values for all states and years
yearly_results_aggregate <- fleet_analysis_results %>%
drop_na() %>%
group_by(year) %>%
summarize(Electric = sum(Electric),
Hybrid   = sum(Hybrid),
Other    = sum(Other),
Total   = sum(total_vehicles)) %>%
mutate(Share_electric = Electric/Total,
Share_hybrid   = Hybrid/Total)
# Observations per state
yearly_results_state <- fleet_analysis_results %>%
drop_na() %>%
group_by(year, name_state) %>%
summarize(Electric = sum(Electric),
Hybrid   = sum(Hybrid),
Other    = sum(Other),
Total   = sum(total_vehicles)) %>%
mutate(Share_electric = Electric/Total,
Share_hybrid   = Hybrid/Total)
# Pivoted table per category
yearly_results_agg_long <- yearly_results_aggregate %>%
select(year,Electric, Hybrid,Other) %>%
pivot_longer(
cols      = !year,
names_to  = "Category",
values_to = "Count"
)
# 3.3 Line plots to check trends in data ---------------------------------------
# Electric vehicles (aggregate)
plot_trend_ev_agg <- ggplot(yearly_results_aggregate, aes(x = as.integer(year), y = Electric)) +
geom_line(color = "#69b3a2", linewidth = 2) +
geom_point(size = 3, color = "#69b3a2") +
theme_bw()+
scale_x_continuous(breaks = seq(2013, 2024, by = 1)) +
scale_y_continuous(labels = scales::comma) +
labs(
x = "Year",
y = "Number of Registered Vehicles",
title = "Evolution of Electric Vehicles in Brazil")
plot_trend_ev_agg
ggsave("./4_plots/plot_trend_ev_agg.png",
plot = plot_trend_ev_agg)
# Hybrid vehicles (aggregate)
plot_trend_hyb_agg <- ggplot(yearly_results_aggregate, aes(x = as.integer(year), y = Hybrid)) +
geom_line(color = "#69b3a2", linewidth = 2) +
geom_point(size = 3, color = "#69b3a2") +
theme_bw()+
scale_x_continuous(breaks = seq(2013, 2024, by = 1)) +
scale_y_continuous(labels = scales::comma) +
labs(
x = "Year",
y = "Number of Registered Vehicles",
title = "Evolution of Hybrid Vehicles in Brazil")
plot_trend_hyb_agg
ggsave("./4_plots/plot_trend_hyb_agg.png",
plot = plot_trend_hyb_agg)
# Other vehicles (aggregate)
plot_trend_other_agg <- ggplot(yearly_results_aggregate, aes(x = as.integer(year), y = Other)) +
geom_line(color = "#69b3a2", linewidth = 2) +
geom_point(size = 3, color = "#69b3a2") +
theme_bw()+
scale_x_continuous(breaks = seq(2013, 2024, by = 1)) +
scale_y_continuous(labels = scales::comma) +
labs(
x = "Year",
y = "Number of Registered Vehicles",
title = "Evolution of Non-Electric Vehicles in Brazil")
plot_trend_other_agg
ggsave("./4_plots/plot_trend_other_agg.png",
plot   = plot_trend_other_agg)
# All vehicles (aggregate, compared across categories)
plot_trend_compared_cat <- ggplot(yearly_results_agg_long, aes(x = as.integer(year), y = log(Count))) +
geom_line(color = "#69b3a2", linewidth = 2) +
geom_point(size = 3, color = "#69b3a2") +
theme_bw()+
scale_x_continuous(breaks = seq(2013, 2024, by = 1)) +
scale_y_continuous(labels = scales::comma) +
labs(
x = "Year",
y = "Number of Registered Vehicles (log scale)",
title = "Evolution of Registered Vehicles in Brazil per Combustible Type",
subtitle = "Source: National Traffic Secretariat, 2024") +
facet_wrap(~ Category, nrow = 1)
plot_trend_compared_cat
ggsave("./4_plots/plot_trend_compared_cat.png",
plot   = plot_trend_compared_cat,
width  = 14,
height = 4.5,
units = "in")
# Electric vehicles (compared across states)
plot_trend_compared_states <- ggplot(yearly_results_state, aes(x = as.integer(year), y = log(Electric))) +
geom_line(color = "#69b3a2", linewidth = 2) +
geom_point(size = 3, color = "#69b3a2") +
theme_bw()+
scale_x_continuous(breaks = seq(2013, 2024, by = 1)) +
scale_y_continuous(labels = scales::comma) +
labs(
x = "Year",
y = "Number of Registered Vehicles (log scale)",
title = "Evolution of Electric Vehicles in Brazil")+
facet_wrap(~ name_state, nrow = 5)
plot_trend_compared_states
ggsave("./4_plots/plot_trend_compared_states.png",
plot = plot_trend_compared_states,
width  = 15,
height = 15,
units = "in")
plot_trend_ev_agg <- ggplot(yearly_results_aggregate, aes(x = as.integer(year), y = Electric)) +
geom_line(color = "#69b3a2", linewidth = 2) +
geom_point(size = 3, color = "#69b3a2") +
theme_bw()+
scale_x_continuous(breaks = seq(2013, 2024, by = 1)) +
scale_y_continuous(labels = scales::comma) +
labs(
x = "Year",
y = "Number of Registered Vehicles",
title = "Evolution of Electric Vehicles in Brazil",
subtitle = "Source: National Traffic Secretariat, 2024"))
plot_trend_ev_agg <- ggplot(yearly_results_aggregate, aes(x = as.integer(year), y = Electric)) +
geom_line(color = "#69b3a2", linewidth = 2) +
geom_point(size = 3, color = "#69b3a2") +
theme_bw()+
scale_x_continuous(breaks = seq(2013, 2024, by = 1)) +
scale_y_continuous(labels = scales::comma) +
labs(
x = "Year",
y = "Number of Registered Vehicles",
title = "Evolution of Electric Vehicles in Brazil",
subtitle = "Source: National Traffic Secretariat, 2024")
plot_trend_ev_agg
ggsave("./4_plots/plot_trend_ev_agg.png",
plot = plot_trend_ev_agg)
plot_trend_compared_cat <- ggplot(yearly_results_agg_long, aes(x = as.integer(year), y = log(Count), color = Category)) +
geom_line(linewidth = 2) +
geom_point(size = 3) +
theme_bw() +
scale_x_continuous(breaks = seq(2013, 2024, by = 1)) +
scale_y_continuous(labels = scales::comma) +
labs(
x = "Year",
y = "Number of Registered Vehicles (log scale)",
title = "Evolution of Registered Vehicles in Brazil per Combustible Type",
subtitle = "Source: National Traffic Secretariat, 2024",
color = "Category"
)
plot_trend_compared_cat
plot_trend_compared_cat <- ggplot(yearly_results_agg_long, aes(x = as.integer(year), y = Count, color = Category)) +
geom_line(linewidth = 2) +
geom_point(size = 3) +
theme_bw() +
scale_x_continuous(breaks = seq(2013, 2024, by = 1)) +
scale_y_continuous(
trans = "log10",
breaks = c(10, 50, 100, 500, 1000, 5000, 10000), # Custom breaks
labels = scales::comma # Readable labels
) +
labs(
x = "Year",
y = "Number of Registered Vehicles",
title = "Evolution of Registered Vehicles in Brazil per Combustible Type",
subtitle = "Source: National Traffic Secretariat, 2024",
color = "Category"
)
plot_trend_compared_cat
summary(yearly_results_agg_long$Count)
plot_trend_compared_cat <- ggplot(yearly_results_agg_long, aes(x = as.integer(year), y = Count, color = Category)) +
geom_line(linewidth = 2) +
geom_point(size = 3) +
theme_bw() +
scale_x_continuous(breaks = seq(2013, 2024, by = 1)) +
scale_y_continuous(
trans = "log10",
breaks = c(1618, 2502, 20944, 1e5, 1e6, 1e7, 1e8),
labels = scales::label_number(scale_cut = scales::cut_short_scale())
) +
labs(
x = "Year",
y = "Number of Registered Vehicles (log scale)",
title = "Evolution of Registered Vehicles in Brazil per Combustible Type",
subtitle = "Source: National Traffic Secretariat, 2024",
color = "Category"
)
plot_trend_compared_cat
plot_trend_compared_cat <- ggplot(yearly_results_agg_long, aes(x = as.integer(year), y = Count, color = Category)) +
geom_line(linewidth = 2) +
geom_point(size = 3) +
theme_bw() +
scale_x_continuous(breaks = seq(2013, 2024, by = 1)) +
scale_y_continuous(
trans = "log10",
breaks = scales::trans_breaks("log10", function(x) 10^x), # Powers of 10
labels = scales::comma # Readable labels with commas
) +
theme(
panel.grid.major.y = element_line(color = "gray", linetype = "dashed"), # Dashed grid lines for y-axis
panel.grid.minor.y = element_blank() # Remove minor grid lines for clarity
) +
labs(
x = "Year",
y = "Number of Registered Vehicles",
title = "Evolution of Registered Vehicles in Brazil per Combustible Type",
subtitle = "Source: National Traffic Secretariat, 2024",
color = "Category"
)
plot_trend_compared_cat
ggsave("./4_plots/plot_trend_compared_cat.png",
plot   = plot_trend_compared_cat,
width  = 14,
height = 4.5,
units = "in")
ggsave("./4_plots/plot_trend_compared_cat.png",
plot   = plot_trend_compared_cat)
# 1. Packages ------------------------------------------------------------------
pacman::p_load(readr,        # Read CSV files
readxl,       # Read Excel files
dplyr,        # Data manipulation
tidyr,        # Data tidying and reshaping
ggplot2,      # Create data visualizations
scales,       # Format axes and legends (percentages, currencies)
stringr,      # String manipulation
lubridate,    # Date and time manipulation
basedosdados, # Access to Brazilian public data via BigQuery
geobr,        # Brazilian geographic data
sf,           # Handle spatial/geographic data
viridis,      # Color palettes for data visualization
stringi,
gt,
webshot2,
RColorBrewer) # Additional color palettes for plotting
# 2. Raw dataframes ------------------------------------------------------------
# 2.1. Dowloaded files ---------------------------------------------------------
# 2.2. Files from packages -----------------------------------------------------
# State data with geographical coordinates
state_df <- geobr::read_state(year = 2020,showProgress = FALSE)
city_df <- geobr::read_municipality(year = 2020,showProgress = TRUE)
# 2.3. Files from BigQuery ----------------------------------------------------
# Population Size
source("./2_code/01_descriptive-demographics.R")
# Commute time
set_billing_id("central-stream-297218")
query_commute_time <- "
SELECT
dados.ano as ano,
dados.sigla_uf AS sigla_uf,
diretorio_sigla_uf.nome AS sigla_uf_nome,
dados.id_municipio AS id_municipio,
diretorio_id_municipio.nome AS id_municipio_nome,
dados.tempo_medio_deslocamento as tempo_medio_deslocamento,
dados.prop_deslocamento_acima_1_hora as prop_deslocamento_acima_1_hora
FROM `basedosdados.br_mobilidados_indicadores.tempo_deslocamento_casa_trabalho` AS dados
LEFT JOIN (SELECT DISTINCT sigla,nome  FROM `basedosdados.br_bd_diretorios_brasil.uf`) AS diretorio_sigla_uf
ON dados.sigla_uf = diretorio_sigla_uf.sigla
LEFT JOIN (SELECT DISTINCT id_municipio,nome  FROM `basedosdados.br_bd_diretorios_brasil.municipio`) AS diretorio_id_municipio
ON dados.id_municipio = diretorio_id_municipio.id_municipio
"
df_commute_time <-read_sql(query_commute_time, billing_project_id = get_billing_id())
# 3. Overview of the commute time per capitals ---------------------------------
# 3.0 Exploring categories per year  -------------------------------------------
city_coordinates <- city_df %>%
select(code_muni, geom, name_region) %>%
mutate(code_muni = as.character(code_muni)) %>%
rename(id_municipio  = code_muni,
`Region Name` = name_region)
pop_size <- pop_city %>%
select(id_municipio, populacao)
df_commute_cities <- df_commute_time %>%
left_join(city_coordinates, by = "id_municipio") %>%
left_join(pop_size, by = "id_municipio") %>%
na.omit()
# Translation of region names
df_commute_cities <- df_commute_cities %>%
mutate(`Region Name` = case_when(
`Region Name` == "Norte" ~ "North",
`Region Name` == "Nordeste" ~ "Northeast",
`Region Name` == "Centro Oeste" ~ "Central-West",
`Region Name` == "Sudeste" ~ "Southeast",
`Region Name` == "Sul" ~ "South",
TRUE ~ `Region Name` # Keep original value if no match
))
plot_scatter_popsize_commute <- ggplot(df_commute_cities, aes(x = tempo_medio_deslocamento, y = populacao, color = `Region Name`)) +
geom_point(size = 4, alpha = 0.5) + # Adjust point transparency
scale_y_continuous(
name = "Population size",
trans = "log10", # Logarithmic scale for better readability
breaks = c(1e4, 1e5, 1e6, 1e7, 5e7), # Custom breaks for markers
labels = c("10k", "100k", "1M", "10M", "50M") # Custom labels
) +
scale_x_continuous(name = "Average Commute Time (minutes)") +
scale_color_brewer(palette = "Dark2") + # Improved color palette
labs(
title = "Average Commute Time in Selected Cities in Brazil",
subtitle = "Source: MobiliDADOS, 2010"
) +
theme_minimal() + # Clean background
theme(
panel.grid.minor = element_blank(), # Remove minor gridlines
panel.grid.major.x = element_line(color = "gray80"), # Subtle gridlines for x-axis
panel.grid.major.y = element_line(color = "gray80"),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
legend.position = "right",
plot.background = element_rect(fill = "#ffffff", color = NA)
)
ggsave("./4_plots/plot_scatter_popsize_commute.png", plot = plot_scatter_popsize_commute)
plot_scatter_popsize_commute_reg <- ggplot(df_commute_cities, aes(x = tempo_medio_deslocamento, y = populacao, color = `Region Name`)) +
geom_point(size = 4, alpha = 0.5) + # Adjust point transparency
scale_y_continuous(
name = "Population size",
trans = "log10", # Logarithmic scale for better readability
breaks = c(1e4, 1e5, 1e6, 1e7, 5e7), # Custom breaks for markers
labels = c("10k", "100k", "1M", "10M", "50M") # Custom labels
) +
scale_x_continuous(name = "Average Commute Time (minutes)") +
labs(
title = "Average Commute Time in Selected Cities in Brazil",
subtitle = "Source: MobiliDADOS, 2010"
) +
theme_bw() + # Clean background
theme(
panel.grid.minor = element_blank(), # Remove minor gridlines
panel.grid.major.x = element_line(color = "gray80"), # Subtle gridlines for x-axis
panel.grid.major.y = element_line(color = "gray80"),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
legend.position = "none",
plot.background = element_rect(fill = "#ffffff", color = NA)
) + facet_wrap(~ `Region Name`, nrow = 2)
ggsave("./4_plots/plot_scatter_popsize_commute_reg.png", plot = plot_scatter_popsize_commute_reg)
# Formatting tables with the data
# Table 1: ordered by commute time
df_commute_cities_gt_1 <- df_commute_cities %>%
arrange(desc(tempo_medio_deslocamento)) %>%
select(id_municipio_nome, `Region Name`, tempo_medio_deslocamento, populacao) %>%
mutate(tempo_medio_deslocamento = as.numeric(tempo_medio_deslocamento),
populacao = as.numeric(populacao)) %>%
head(15)
# Format the gt table
commute_cities_gt_1 <- df_commute_cities_gt_1 %>%
gt() %>%
tab_header(
title = "Average Commute Time in Selected Cities in Brazil",
subtitle = "15 cities with greater commute times"
) %>%
cols_label(
id_municipio_nome = "City Name",
`Region Name` = "Region",
tempo_medio_deslocamento = "Time (min)",
populacao = "Population Size"
) %>%
fmt_number(
columns = c(populacao), # Format population size with thousand separators
sep_mark = ",", # Use comma as the thousand separator
decimals = 0 # No decimal places
) %>%
cols_align(
align = "left",
columns = c(id_municipio_nome) # Left align City Name column
) %>%
tab_footnote(
locations = NULL,
footnote  = "Source: Mobilidados, 2010")
# Display the formatted table
commute_cities_gt_1
# Saving formatted table
commute_cities_gt_1 %>%
gtsave("./6_tables/commute_cities_gt_1.png", expand = 10)
# Table 2: ordered by population size
df_commute_cities_gt_2 <- df_commute_cities %>%
arrange(desc(populacao)) %>%
select(id_municipio_nome, `Region Name`, tempo_medio_deslocamento, populacao) %>%
mutate(tempo_medio_deslocamento = as.numeric(tempo_medio_deslocamento),
populacao = as.numeric(populacao)) %>%
head(15)
# Format the gt table
commute_cities_gt_2 <- df_commute_cities_gt_2 %>%
gt() %>%
tab_header(
title = "Average Commute Time in Selected Cities in Brazil",
subtitle = "15 largest cities by population size"
) %>%
cols_label(
id_municipio_nome = "City Name",
`Region Name` = "Region",
tempo_medio_deslocamento = "Time (min)",
populacao = "Population Size"
) %>%
fmt_number(
columns = c(populacao), # Format population size with thousand separators
sep_mark = ",", # Use comma as the thousand separator
decimals = 0 # No decimal places
) %>%
cols_align(
align = "left",
columns = c(id_municipio_nome) # Left align City Name column
) %>%
tab_footnote(
locations = NULL,
footnote  = "Source: Mobilidados, 2010")
# Display the formatted table
commute_cities_gt_2
# Saving formatted table
commute_cities_gt_2 %>%
gtsave("./6_tables/commute_cities_gt_2.png", expand = 10)
## This chunk below is not yet being used --------------------------------------
# Convert the df to generate the map
df_commute_cities <- st_as_sf(df_commute_cities)
# Create a variable for the theme in the plots
no_axis <- theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
#
plot_commute_time <- ggplot() +
geom_sf(data=df_commute_cities, aes(fill=tempo_medio_deslocamento), color=NA, size=.15) +
labs(
title = "Average Commute Time in Selected Cities in Brazil",
subtitle = "Time measured in Minutes. Source: MobiliDADOS, 2010",
fill = "Avg. Commute Time") +
scale_fill_distiller(palette="Purples", name="Avg. Commute Time", direction = 1, labels = scales::comma_format()) +
theme_minimal() +
theme(
plot.title = element_text(size = 16, face = "bold"),
plot.subtitle = element_text(size = 12),
legend.title = element_text(size = 10),
legend.text = element_text(size = 8),
panel.grid = element_blank(),
plot.background = element_rect(fill = "#ffffff", color = NA)
) +
no_axis
plot_commute_time
plot_scatter_popsize_commute_reg
plot_scatter_popsize_commute_reg <- ggplot(df_commute_cities, aes(x = tempo_medio_deslocamento, y = populacao, color = `Region Name`)) +
geom_point(size = 4, alpha = 0.5) + # Adjust point transparency
scale_y_continuous(
name = "Population size",
trans = "log10", # Logarithmic scale for better readability
breaks = c(1e4, 1e5, 1e6, 1e7, 5e7), # Custom breaks for markers
labels = c("10k", "100k", "1M", "10M", "50M") # Custom labels
) +
scale_x_continuous(name = "Average Commute Time (minutes)") +
labs(
title = "Average Commute Time in Selected Cities in Brazil per Region",
subtitle = "Source: MobiliDADOS, 2010"
) +
theme_bw() + # Clean background
theme(
panel.grid.minor = element_blank(), # Remove minor gridlines
panel.grid.major.x = element_line(color = "gray80"), # Subtle gridlines for x-axis
panel.grid.major.y = element_line(color = "gray80"),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
legend.position = "none",
plot.background = element_rect(fill = "#ffffff", color = NA)
) + facet_wrap(~ `Region Name`, nrow = 2)
ggsave("./4_plots/plot_scatter_popsize_commute_reg.png", plot = plot_scatter_popsize_commute_reg)
