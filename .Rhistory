plot   = plot_fcast_Prophet,
height = 6,
width  = 8)
print("File successfully saved.")
} else {
print("File already exists in the repository.")
}
fitted_values_Prophet <- fcast_Prophet %>%
head(60) %>%
select(yhat)
time_df_Prophet <- data.frame(
date = as.Date(time(multivariate_ts)),
data = multivariate_ts[,'BEV'],
fitted = fitted_values_Prophet
)
plot_fcast_fitvsobs_Prophet <- ggplot(time_df_Prophet, aes(x = date)) +
geom_line(aes(y = data, color = "Data")) +
geom_line(aes(y = yhat, color = "Fitted")) +
xlab("Year/Month") +
ylab("BEV Stock (log transformed)") +
guides(colour = guide_legend(title = " ")) +
theme_bw()
plot_fcast_fitvsobs_Prophet
source("C:/Users/joaov/Dropbox/R Assignments/master-thesis/2_code/Pipeline/10_combined forecasting models.R", echo=TRUE)
View(time_df_Prophet)
grid_with_title
source("C:/Users/joaov/Dropbox/R Assignments/master-thesis/2_code/Pipeline/10_combined forecasting models.R", echo=TRUE)
grid_with_title
grid_with_title <- grid.arrange(
grobs = list(
arrangeGrob(plot_fcast_ARIMA_blank,   top = "(a) ARIMA"),
arrangeGrob(plot_fcast_ETS_blank,     top = "(b) ETS"),
arrangeGrob(plot_fcast_TS_blank,      top = "(c) Linear"),
arrangeGrob(plot_fcast_Prophet_blank, top = "(d) Prophet")
),
ncol = 2,
top = textGrob("Forecast Comparison Across Models", gp = gpar(fontsize = 16, fontface = "bold"))
)
grid_with_title <- grid.arrange(
grobs = list(
arrangeGrob(plot_fcast_ARIMA_blank,   top = "(a) ARIMA"),
arrangeGrob(plot_fcast_ETS_blank,     top = "(b) ETS"),
arrangeGrob(plot_fcast_TS_blank,      top = "(c) Linear"),
arrangeGrob(plot_fcast_Prophet_blank, top = "(d) Prophet")
),
ncol = 2,
top = textGrob("Forecast Comparison Across Models", gp = gpar(fontsize = 16, fontface = ""))
)
grid_with_title <- grid.arrange(
grobs = list(
arrangeGrob(plot_fcast_ARIMA_blank,   top = "(a) ARIMA"),
arrangeGrob(plot_fcast_ETS_blank,     top = "(b) ETS"),
arrangeGrob(plot_fcast_TS_blank,      top = "(c) Linear"),
arrangeGrob(plot_fcast_Prophet_blank, top = "(d) Prophet")
),
ncol = 2,
top = textGrob("Forecast Comparison Across Models", gp = gpar(fontsize = 16))
)
plot_fcast_all <- grid.arrange(
grobs = list(
arrangeGrob(plot_fcast_ARIMA_blank,   top = "(a) ARIMA"),
arrangeGrob(plot_fcast_ETS_blank,     top = "(b) ETS"),
arrangeGrob(plot_fcast_TS_blank,      top = "(c) Linear"),
arrangeGrob(plot_fcast_Prophet_blank, top = "(d) Prophet")
),
ncol = 2,
top = textGrob("Forecast Comparison Across Models", gp = gpar(fontsize = 16))
)
if (!file.exists("./4_plots/plot_fcast_all.png")) {
ggsave(        "./4_plots/plot_fcast_all.png",
plot   = plot_fcast_all,
height = 8,
width  = 10)
print("File successfully saved.")
} else {
print("File already exists in the repository.")
}
?grid.arrange
plot_fcast_all <- ?grid.arrange(
grobs = list(
arrangeGrob(plot_fcast_ARIMA_blank,   top = "(a) ARIMA"),
arrangeGrob(plot_fcast_ETS_blank,     top = "(b) ETS"),
arrangeGrob(plot_fcast_TS_blank,      top = "(c) Linear"),
arrangeGrob(plot_fcast_Prophet_blank, top = "(d) Prophet")
),
ncol = 2,
top = textGrob("BEV Stock in Brazil: Forecast Comparison Across Models", gp = gpar(fontsize = 16)),
bottom = textGrob("Year", gp = gpar(fontsize = 10)),
left = textGrob("BEV Stock", gp = gpar(fontsize = 10))
)
plot_fcast_all <- grid.arrange(
grobs = list(
arrangeGrob(plot_fcast_ARIMA_blank,   top = "(a) ARIMA"),
arrangeGrob(plot_fcast_ETS_blank,     top = "(b) ETS"),
arrangeGrob(plot_fcast_TS_blank,      top = "(c) Linear"),
arrangeGrob(plot_fcast_Prophet_blank, top = "(d) Prophet")
),
ncol = 2,
top = textGrob("BEV Stock in Brazil: Forecast Comparison Across Models", gp = gpar(fontsize = 16)),
bottom = textGrob("Year", gp = gpar(fontsize = 10)),
left = textGrob("BEV Stock", gp = gpar(fontsize = 10))
)
plot_fcast_all <- grid.arrange(
grobs = list(
arrangeGrob(plot_fcast_ARIMA_blank,   top = "(a) ARIMA"),
arrangeGrob(plot_fcast_ETS_blank,     top = "(b) ETS"),
arrangeGrob(plot_fcast_TS_blank,      top = "(c) Linear"),
arrangeGrob(plot_fcast_Prophet_blank, top = "(d) Prophet")
),
ncol = 2,
top = textGrob("BEV Stock in Brazil: Forecast Comparison Across Models", gp = gpar(fontsize = 16)),
bottom = textGrob("Year", gp = gpar(fontsize = 10)),
left = textGrob("BEV Stock",
rot = 90,  # Full 90° rotation
gp = gpar(fontsize = 12, fontface = "bold"))
)
plot_fcast_all <- grid.arrange(
grobs = list(
arrangeGrob(plot_fcast_ARIMA_blank,   top = "(a) ARIMA"),
arrangeGrob(plot_fcast_ETS_blank,     top = "(b) ETS"),
arrangeGrob(plot_fcast_TS_blank,      top = "(c) Linear"),
arrangeGrob(plot_fcast_Prophet_blank, top = "(d) Prophet")
),
ncol = 2,
top = textGrob("BEV Stock in Brazil: Forecast Comparison Across Models", gp = gpar(fontsize = 16)),
bottom = textGrob("Year", gp = gpar(fontsize = 10)),
left = textGrob("BEV Stock",
rot = 90,  # Full 90° rotation
gp = gpar(fontsize = 10))
)
ggsave(        "./4_plots/plot_fcast_all.png",
plot   = plot_fcast_all,
height = 8,
width  = 10)
style_forecast_plot <- function(plot, y_max = 600000) {
plot +
consistent_theme +
scale_y_continuous(limits = c(0, y_max), labels = scales::comma) +
scale_color_manual(values = c("black", "blue")) +
scale_fill_manual(values = c("gray80"))
}
# Define a function to apply consistent styling
style_forecast_plot <- function(plot, y_max = 600000) {
plot +
consistent_theme +
scale_y_continuous(limits = c(0, y_max), labels = scales::comma) +
scale_color_manual(values = c("black", "blue")) +
scale_fill_manual(values = c("gray80"))
}
# Apply to all plots with the same y-axis limit
plot_fcast_ARIMA_styled <- style_forecast_plot(plot_fcast_ARIMA)
# Define a function to apply consistent styling
style_forecast_plot <- function(plot, y_max = 600000) {
plot +
consistent_theme +
scale_y_continuous(limits = c(0, y_max), labels = scales::comma) +
scale_color_manual(values = c("black", "blue")) +
scale_fill_manual(values = c("gray80"))
}
# Define a function to apply consistent styling
style_forecast_plot <- function(plot, y_max = 600000) {
plot +
theme_bw() +
scale_y_continuous(limits = c(0, y_max), labels = scales::comma) +
scale_color_manual(values = c("black", "blue")) +
scale_fill_manual(values = c("gray80"))
}
# Apply to all plots with the same y-axis limit
plot_fcast_ARIMA_styled <- style_forecast_plot(plot_fcast_ARIMA)
plot_fcast_ETS_styled <- style_forecast_plot(plot_fcast_ETS)
plot_fcast_TS_styled <- style_forecast_plot(plot_fcast_TS)
plot_fcast_Prophet_styled <- style_forecast_plot(plot_fcast_Prophet)
plot_fcast_all <- grid.arrange(
grobs = list(
arrangeGrob(plot_fcast_ARIMA_styled,   top = "(a) ARIMA"),
arrangeGrob(plot_fcast_ETS_styled,     top = "(b) ETS"),
arrangeGrob(plot_fcast_TS_styled,      top = "(c) Linear"),
arrangeGrob(plot_fcast_Prophet_styled, top = "(d) Prophet")
),
ncol = 2,
top = textGrob("BEV Stock in Brazil: Forecast Comparison Across Models", gp = gpar(fontsize = 16)),
bottom = textGrob("Year", gp = gpar(fontsize = 10)),
left = textGrob("BEV Stock",
rot = 90,  # Full 90° rotation
gp = gpar(fontsize = 10)))
# Define a function to apply consistent styling
style_forecast_plot <- function(plot, y_max = 600000) {
plot +
theme_bw() +
scale_y_continuous(limits = c(0, y_max), labels = scales::comma) +
scale_color_manual(values = c("black", "blue")) +
scale_fill_manual(values = c("gray80")) +
theme(plot.title    = element_blank(),
plot.subtitle = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank())
}
# Apply to all plots with the same y-axis limit
plot_fcast_ARIMA_styled <- style_forecast_plot(plot_fcast_ARIMA)
plot_fcast_ETS_styled <- style_forecast_plot(plot_fcast_ETS)
plot_fcast_TS_styled <- style_forecast_plot(plot_fcast_TS)
plot_fcast_Prophet_styled <- style_forecast_plot(plot_fcast_Prophet)
plot_fcast_all <- grid.arrange(
grobs = list(
arrangeGrob(plot_fcast_ARIMA_styled,   top = "(a) ARIMA"),
arrangeGrob(plot_fcast_ETS_styled,     top = "(b) ETS"),
arrangeGrob(plot_fcast_TS_styled,      top = "(c) Linear"),
arrangeGrob(plot_fcast_Prophet_styled, top = "(d) Prophet")
),
ncol = 2,
top = textGrob("BEV Stock in Brazil: Forecast Comparison Across Models", gp = gpar(fontsize = 16)),
bottom = textGrob("Year", gp = gpar(fontsize = 10)),
left = textGrob("BEV Stock",
rot = 90,  # Full 90° rotation
gp = gpar(fontsize = 10)))
# Define a function to apply consistent styling
style_forecast_plot <- function(plot) {
plot +
theme_bw() +
scale_y_continuous(labels = scales::comma) +
scale_color_manual(values = c("black", "blue")) +
scale_fill_manual(values = c("gray80")) +
theme(plot.title    = element_blank(),
plot.subtitle = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank())
}
# Apply to all plots with the same y-axis limit
plot_fcast_ARIMA_styled <- style_forecast_plot(plot_fcast_ARIMA)
plot_fcast_ETS_styled <- style_forecast_plot(plot_fcast_ETS)
plot_fcast_TS_styled <- style_forecast_plot(plot_fcast_TS)
plot_fcast_Prophet_styled <- style_forecast_plot(plot_fcast_Prophet)
plot_fcast_all <- grid.arrange(
grobs = list(
arrangeGrob(plot_fcast_ARIMA_styled,   top = "(a) ARIMA"),
arrangeGrob(plot_fcast_ETS_styled,     top = "(b) ETS"),
arrangeGrob(plot_fcast_TS_styled,      top = "(c) Linear"),
arrangeGrob(plot_fcast_Prophet_styled, top = "(d) Prophet")
),
ncol = 2,
top = textGrob("BEV Stock in Brazil: Forecast Comparison Across Models", gp = gpar(fontsize = 16)),
bottom = textGrob("Year", gp = gpar(fontsize = 10)),
left = textGrob("BEV Stock",
rot = 90,  # Full 90° rotation
gp = gpar(fontsize = 10)))
# First, create a consistent theme to apply to all plots
consistent_theme <- theme_minimal() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = "gray90"),
axis.text = element_text(size = 9),
legend.position = "none",
plot.margin = margin(5, 5, 5, 5)
)
# Define consistent colors
hist_color <- "black"
forecast_color <- "blue"
interval_fill <- "gray70"
interval_alpha <- 0.5
# Standardize ARIMA plot
plot_fcast_ARIMA_std <- plot_fcast_ARIMA +
scale_y_continuous(limits = c(0, 160000)) +
geom_line(aes(y = fitted(model_ARIMA)), color = hist_color) +
geom_line(aes(y = mean), color = forecast_color) +
geom_ribbon(aes(ymin = lower, ymax = upper), fill = interval_fill, alpha = interval_alpha) +
consistent_theme
# Standardize ETS plot
plot_fcast_ETS_std <- plot_fcast_ETS +
scale_y_continuous(limits = c(0, 160000)) +
geom_line(aes(y = fitted(model_ETS)), color = hist_color) +
geom_line(aes(y = mean), color = forecast_color) +
geom_ribbon(aes(ymin = lower, ymax = upper), fill = interval_fill, alpha = interval_alpha) +
consistent_theme
# Standardize Linear plot - needs rescaling
plot_fcast_TS_std <- plot_fcast_TS +
scale_y_continuous(limits = c(0, 160000)) +  # Adjust from 600,000 to match others
geom_line(aes(y = fitted(model_TS)), color = hist_color) +
geom_line(aes(y = mean), color = forecast_color) +
geom_ribbon(aes(ymin = lower, ymax = upper), fill = interval_fill, alpha = interval_alpha) +
consistent_theme
# Standardize Prophet plot
plot_fcast_Prophet_std <- plot_fcast_Prophet +
scale_y_continuous(limits = c(0, 160000)) +
geom_line(aes(y = yhat), color = forecast_color) + # Prophet uses different naming
geom_line(data = subset(df, ds <= as.Date("2025-01-01")), aes(y = y), color = hist_color) +
geom_ribbon(aes(ymin = yhat_lower, ymax = yhat_upper), fill = interval_fill, alpha = interval_alpha) +
consistent_theme
# Apply blank elements to all standardized plots
plot_fcast_ARIMA_blank <- plot_fcast_ARIMA_std +
theme(plot.title = element_blank(),
plot.subtitle = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank())
plot_fcast_ETS_blank <- plot_fcast_ETS_std +
theme(plot.title = element_blank(),
plot.subtitle = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank())
plot_fcast_TS_blank <- plot_fcast_TS_std +
theme(plot.title = element_blank(),
plot.subtitle = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank())
plot_fcast_Prophet_blank <- plot_fcast_Prophet_std +
theme(plot.title = element_blank(),
plot.subtitle = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank())
# Create the final panel with consistent styling
plot_fcast_all <- grid.arrange(
grobs = list(
arrangeGrob(plot_fcast_ARIMA_blank, top = textGrob("(a) ARIMA", gp = gpar(fontsize = 10))),
arrangeGrob(plot_fcast_ETS_blank, top = textGrob("(b) ETS", gp = gpar(fontsize = 10))),
arrangeGrob(plot_fcast_TS_blank, top = textGrob("(c) Linear", gp = gpar(fontsize = 10))),
arrangeGrob(plot_fcast_Prophet_blank, top = textGrob("(d) Prophet", gp = gpar(fontsize = 10)))
),
ncol = 2,
top = textGrob("BEV Stock in Brazil: Forecast Comparison Across Models",
gp = gpar(fontsize = 16, fontface = "bold")),
bottom = textGrob("Year", gp = gpar(fontsize = 12)),
left = textGrob("BEV Stock", rot = 90, gp = gpar(fontsize = 12))
)
# Standardize ARIMA plot
plot_fcast_ARIMA_std <- plot_fcast_ARIMA +
scale_y_continuous(limits = c(0, 160000)) +
geom_line(aes(y = fitted(fit_ARIMA)), color = hist_color) +
geom_line(aes(y = mean), color = forecast_color) +
geom_ribbon(aes(ymin = lower, ymax = upper), fill = interval_fill, alpha = interval_alpha) +
consistent_theme
plot_fcast_ARIMA_std
source("C:/Users/joaov/Dropbox/R Assignments/master-thesis/2_code/Pipeline/10_combined forecasting models.R", echo=TRUE)
plot_fcast_all <- grid.arrange(
grobs = list(
arrangeGrob(plot_fcast_ARIMA_blank,   top = "(a) ARIMA"),
arrangeGrob(plot_fcast_ETS_blank,     top = "(b) ETS"),
arrangeGrob(plot_fcast_TS_blank,      top = "(c) Linear"),
arrangeGrob(plot_fcast_Prophet_blank, top = "(d) Prophet")
),
ncol = 2,
top = textGrob("BEV Stock in Brazil: Forecast Comparison Across Models", gp = gpar(fontsize = 16)),
bottom = textGrob("Year", gp = gpar(fontsize = 10)),
left = textGrob("BEV Stock",
rot = 90,  # Full 90° rotation
gp = gpar(fontsize = 10))
)
plot_fcast_ARIMA_blank    <- plot_fcast_ARIMA   +
theme(plot.title    = element_blank(),
plot.subtitle = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank())
plot_fcast_ETS_blank      <- plot_fcast_ETS     +
theme(plot.title    = element_blank(),
plot.subtitle = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank())+
scale_y_continuous(limits = c(0, 150000))
plot_fcast_TS_blank       <- plot_fcast_TS      +
theme(plot.title    = element_blank(),
plot.subtitle = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank())
plot_fcast_Prophet_blank  <- plot_fcast_Prophet +
theme(plot.title    = element_blank(),
plot.subtitle = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank())
plot_fcast_all <- grid.arrange(
grobs = list(
arrangeGrob(plot_fcast_ARIMA_blank,   top = "(a) ARIMA"),
arrangeGrob(plot_fcast_ETS_blank,     top = "(b) ETS"),
arrangeGrob(plot_fcast_TS_blank,      top = "(c) Linear"),
arrangeGrob(plot_fcast_Prophet_blank, top = "(d) Prophet")
),
ncol = 2,
top = textGrob("BEV Stock in Brazil: Forecast Comparison Across Models", gp = gpar(fontsize = 16)),
bottom = textGrob("Year", gp = gpar(fontsize = 10)),
left = textGrob("BEV Stock",
rot = 90,  # Full 90° rotation
gp = gpar(fontsize = 10))
)
plot_fcast_ARIMA_blank    <- plot_fcast_ARIMA   +
theme(plot.title    = element_blank(),
plot.subtitle = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank())
plot_fcast_ETS_blank      <- plot_fcast_ETS     +
theme(plot.title    = element_blank(),
plot.subtitle = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank())+
scale_y_continuous(limits = c(0, 150000, labels = scales::comma))
plot_fcast_TS_blank       <- plot_fcast_TS      +
theme(plot.title    = element_blank(),
plot.subtitle = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank())+
scale_y_continuous(limits = c(0, 750000, labels = scales::comma))
plot_fcast_Prophet_blank  <- plot_fcast_Prophet +
theme(plot.title    = element_blank(),
plot.subtitle = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank())
plot_fcast_all <- grid.arrange(
grobs = list(
arrangeGrob(plot_fcast_ARIMA_blank,   top = "(a) ARIMA"),
arrangeGrob(plot_fcast_ETS_blank,     top = "(b) ETS"),
arrangeGrob(plot_fcast_TS_blank,      top = "(c) Linear"),
arrangeGrob(plot_fcast_Prophet_blank, top = "(d) Prophet")
),
ncol = 2,
top = textGrob("BEV Stock in Brazil: Forecast Comparison Across Models", gp = gpar(fontsize = 16)),
bottom = textGrob("Year", gp = gpar(fontsize = 10)),
left = textGrob("BEV Stock",
rot = 90,  # Full 90° rotation
gp = gpar(fontsize = 10))
)
plot_fcast_all <- grid.arrange(
grobs = list(
arrangeGrob(plot_fcast_ARIMA_blank,   top = "(a) ARIMA"),
arrangeGrob(plot_fcast_ETS_blank,     top = "(b) ETS"),
arrangeGrob(plot_fcast_TS_blank,      top = "(c) Linear"),
arrangeGrob(plot_fcast_Prophet_blank, top = "(d) Prophet")
),
ncol = 2,
top = textGrob("BEV Stock in Brazil: Forecast Comparison Across Models", gp = gpar(fontsize = 16)),
bottom = textGrob("Year", gp = gpar(fontsize = 10)),
left = textGrob("BEV Stock",
rot = 90,  # Full 90° rotation
gp = gpar(fontsize = 10))
)
plot_fcast_ETS_blank      <- plot_fcast_ETS     +
theme(plot.title    = element_blank(),
plot.subtitle = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank())+
scale_y_continuous(limits = c(0, 150000), labels = scales::comma)
plot_fcast_ARIMA_blank    <- plot_fcast_ARIMA   +
theme(plot.title    = element_blank(),
plot.subtitle = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank())
plot_fcast_ETS_blank      <- plot_fcast_ETS     +
theme(plot.title    = element_blank(),
plot.subtitle = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank())+
scale_y_continuous(limits = c(0, 150000), labels = scales::comma)
plot_fcast_TS_blank       <- plot_fcast_TS      +
theme(plot.title    = element_blank(),
plot.subtitle = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank())+
scale_y_continuous(limits = c(0, 750000), labels = scales::comma)
plot_fcast_Prophet_blank  <- plot_fcast_Prophet +
theme(plot.title    = element_blank(),
plot.subtitle = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank())
plot_fcast_all <- grid.arrange(
grobs = list(
arrangeGrob(plot_fcast_ARIMA_blank,   top = "(a) ARIMA"),
arrangeGrob(plot_fcast_ETS_blank,     top = "(b) ETS"),
arrangeGrob(plot_fcast_TS_blank,      top = "(c) Linear"),
arrangeGrob(plot_fcast_Prophet_blank, top = "(d) Prophet")
),
ncol = 2,
top = textGrob("BEV Stock in Brazil: Forecast Comparison Across Models", gp = gpar(fontsize = 16)),
bottom = textGrob("Year", gp = gpar(fontsize = 10)),
left = textGrob("BEV Stock",
rot = 90,  # Full 90° rotation
gp = gpar(fontsize = 10))
plot_fcast_ARIMA_blank    <- plot_fcast_ARIMA   +
plot_fcast_ARIMA_blank    <- plot_fcast_ARIMA   +
theme(plot.title    = element_blank(),
plot.subtitle = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank())
plot_fcast_ETS_blank      <- plot_fcast_ETS     +
theme(plot.title    = element_blank(),
plot.subtitle = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank())+
scale_y_continuous(limits = c(0, 150000), labels = scales::comma)
plot_fcast_TS_blank       <- plot_fcast_TS      +
theme(plot.title    = element_blank(),
plot.subtitle = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank())+
scale_y_continuous(limits = c(0, 750000), labels = scales::comma)
plot_fcast_Prophet_blank  <- plot_fcast_Prophet +
theme(plot.title    = element_blank(),
plot.subtitle = element_blank(),
axis.title.y  = element_blank(),
axis.title.x  = element_blank())
plot_fcast_all <- grid.arrange(
grobs = list(
arrangeGrob(plot_fcast_ARIMA_blank,   top = "(a) ARIMA"),
arrangeGrob(plot_fcast_ETS_blank,     top = "(b) ETS"),
arrangeGrob(plot_fcast_TS_blank,      top = "(c) Linear"),
arrangeGrob(plot_fcast_Prophet_blank, top = "(d) Prophet")
),
ncol = 2,
top = textGrob("BEV Stock in Brazil: Forecast Comparison Across Models", gp = gpar(fontsize = 16)),
bottom = textGrob("Year", gp = gpar(fontsize = 10)),
left = textGrob("BEV Stock",
rot = 90,  # Full 90° rotation
gp = gpar(fontsize = 10))
)
ggsave(        "./4_plots/plot_fcast_all.png",
plot   = plot_fcast_all,
height = 8,
width  = 10)
