strip.text = element_text(size = 10, face = "bold"), # Improve facet labels
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
plot.title = element_text(size = 14, face = "bold"),
plot.subtitle = element_text(size = 12)
) +
facet_wrap(~ session_politician, nrow = 2) # Show session numbers clearly
ggsave("plots/us_senate_gender_wikipedia_revisions_plot.png", plot = plot_senate_gender, width = 16, height = 8, dpi = 300)
install.packages("ggridges")
# Filtering politicians from the sessions 107 to 117
us_senate_political_subset <- us_senate_political %>%
filter (session >= 107 & session <= 117) %>%
mutate (session_politician = session) %>%  # Identifying the session the MP belong to, instead of when the page was edited
select(pageid:session_end, session_politician)
#identifying the number of revisions per session in the US Senate
senate_revisions_session <- us_senate_wiki_history_session %>%
group_by(session, pageid) %>%
summarize (no_revisions = n(), .groups = "keep") %>%
mutate(pageid = as.character(pageid)) %>%
left_join(us_senate_political_subset, by = "pageid", relationship = "many-to-many") %>%
left_join(us_senate_core, by = "pageid") %>%
select(session.x,
pageid,
no_revisions,
party,
constituency,
session_start,
session_end,name,sex,
ethnicity,
religion,
birth,
death,
session_politician) %>%
filter(!is.na(session_politician)) %>%
select(-session.x)
plot_senate_ethnicity <- ggplot(senate_revisions_session, aes(x = no_revisions, y = ethnicity, fill = ethnicity)) +
geom_density_ridges(alpha = 0.6, scale = 1) +
theme_ridges() +
scale_x_log10(labels = scales::comma) +
scale_fill_viridis_d(option = "C") +
labs(
title = "US Senate: distribution of Wikipedia Page Revisions by Ethnicity",
subtitle = "Logarithmic scale of revisions across congressional sessions",
x = "Number of Wikipedia Revisions (Log Scale)",
y = "Ethnicity",
) +
theme(
legend.position = "none",
panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA),
strip.text = element_text(size = 10, face = "bold"), # Improve facet labels
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
plot.title = element_text(size = 14, face = "bold"),
plot.subtitle = element_text(size = 12)
) +
facet_wrap(~ session_politician, nrow = 2) # Show session numbers clearly
# Save the plot with high resolution
ggsave("plots/us_senate_ethnicitiy_wikipedia_revisions_plot.png", plot = plot_senate_ethnicity, width = 16, height = 8, dpi = 300)
plot_senate_gender <- ggplot(senate_revisions_session, aes(x = no_revisions, y = sex, fill = sex)) +
geom_density_ridges(alpha = 0.6, scale = 1) +
theme_ridges() +
scale_x_log10(labels = scales::comma) +
scale_fill_viridis_d(option = "C") +
labs(
title = "US Senate: distribution of Wikipedia Page Revisions by Gender",
subtitle = "Logarithmic scale of revisions across congressional sessions",
x = "Number of Wikipedia Revisions (Log Scale)",
y = "Gender",
) +
theme(
legend.position = "none",
panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA),
strip.text = element_text(size = 10, face = "bold"), # Improve facet labels
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
plot.title = element_text(size = 14, face = "bold"),
plot.subtitle = element_text(size = 12)
) +
facet_wrap(~ session_politician, nrow = 2) # Show session numbers clearly
ggsave("plots/us_senate_gender_wikipedia_revisions_plot.png", plot = plot_senate_gender, width = 16, height = 8, dpi = 300)
gc()
pacman::p_load (legislatoR,dplyr,tidyr,ggplot2,scales,stringr,rvest,lubridate,cowplot,ggridges,patchwork)
# Fetching political data for Senate
us_senate_core         <- get_core      (legislature = "usa_senate")
us_senate_political    <- get_political (legislature = "usa_senate")
us_senate_wiki_traffic <- get_traffic   (legislature = "usa_senate")
# List of party affiliation per page ID for Senate
senate_party_affiliation <- us_senate_political %>%
select(pageid, party)
# Updating core data set with party affiliation and age data for Senate
us_senate_core <- us_senate_core %>%
mutate(
age = ifelse(
!is.na(death), # If death date is not missing
as.numeric(difftime(death, birth, units = "days")) %/% 365,
as.numeric(difftime(Sys.Date(), birth, units = "days")) %/% 365 # Else use today's date
)) %>%
mutate(
age_category = cut(
age,
breaks = c(20, 40, 50, 60, 70, 80, Inf), # Define intervals
labels = c("20-40", "40-50", "50-60", "60-70", "70-80", "80+"), # Define labels
right = FALSE # Include the left endpoint but exclude the right
)
) %>%
left_join(senate_party_affiliation, by = "pageid") %>%
mutate(
ethnicity = ifelse(ethnicity == "Islander", "Pacific Islander", ethnicity),
ethnicity = ifelse(ethnicity == "Native", "Native American", ethnicity)
)
yearly_traffic_us_senate <- us_senate_wiki_traffic %>%
mutate(year = year(date)) %>%
group_by(year, pageid) %>%
summarize(total_traffic = sum(traffic), .groups = "keep") %>%
left_join(us_senate_core, by = "pageid") %>%
group_by(year, pageid) %>%
summarize(total_traffic = sum(total_traffic),
ethnicity     = first(ethnicity),
gender        = first(sex),
age           = first(age_category),
party         = first(party),
.groups = "keep")
# Fetching political data for House
us_house_core           <- get_core      (legislature = "usa_house")
us_house_political      <- get_political (legislature = "usa_house")
us_house_wiki_traffic   <- get_traffic   (legislature = "usa_house")
# List of party affiliation per page ID for House
house_party_affiliation <- us_house_political %>%
select(pageid, party)
# Updating core dataset with party affiliation and age data for House
us_house_core <- us_house_core %>%
mutate(
age = ifelse(
!is.na(death), # If death date is not missing
as.numeric(difftime(death, birth, units = "days")) %/% 365,
as.numeric(difftime(Sys.Date(), birth, units = "days")) %/% 365 # Else use today's date
)) %>%
mutate(
age_category = cut(
age,
breaks = c(20, 40, 50, 60, 70, 80, Inf), # Define intervals
labels = c("20-40", "40-50", "50-60", "60-70", "70-80", "80+"), # Define labels
right = FALSE # Include the left endpoint but exclude the right
)
) %>%
left_join(house_party_affiliation, by = "pageid") %>%
mutate(
ethnicity = ifelse(ethnicity == "islander", "Pacific Islander", ethnicity),
ethnicity = ifelse(ethnicity == "native", "Native American", ethnicity)
)
yearly_traffic_us_house <- us_house_wiki_traffic %>%
mutate(year = year(date)) %>%
group_by(year, pageid) %>%
summarize(total_traffic = sum(traffic), .groups = "keep") %>%
left_join(us_house_core, by = "pageid") %>%
group_by(year, pageid) %>%
summarize(name          = first(name),
total_traffic = sum(total_traffic),
ethnicity     = first(ethnicity),
gender        = first(sex),
age           = first(age_category),
party         = first(party),
.groups = "keep")
test_house <- yearly_traffic_us_house %>%
group_by(ethnicity, gender) %>%
summarize(number = n(),
.groups = "keep")
# Creating the aggregate data (with tags for each chamber)
yearly_traffic_us_senate <- yearly_traffic_us_senate %>%
filter(total_traffic > 0) %>%
mutate(chamber = "senate")
yearly_traffic_us_house <- yearly_traffic_us_house %>%
filter(total_traffic > 0) %>%
mutate(chamber = "house") %>%
drop_na()
yearly_traffic_congress <- yearly_traffic_us_senate %>%
bind_rows(yearly_traffic_us_house)
# Capitalizing label titles
yearly_traffic_congress <- yearly_traffic_congress %>%
mutate(
gender = str_to_title(gender),          # Capitalize "male" and "female"
ethnicity = str_to_title(ethnicity)    # Capitalize ethnicity categories
)
# Cleaning data for party segmentation
filter_party <- function(data, party) {
data %>%
filter(party == !!party) # Filter rows where the 'party' column matches the input
}
congress_republicans <- filter_party(yearly_traffic_congress, "R")
congress_democrats <-   filter_party(yearly_traffic_congress, "D")
yearly_traffic_us_congress_pty <- congress_republicans %>%
bind_rows(congress_democrats)
# Correcting data for the labels
yearly_traffic_us_congress_pty <- yearly_traffic_us_congress_pty %>%
mutate(party = recode(party,
"R" = "Republican",
"D" = "Democrat"))
# Ethnicity Plot
plot_congress_gender_traffic_eth <- ggplot(yearly_traffic_congress, aes(x = total_traffic, y = gender, fill = gender)) +
geom_density_ridges(alpha = 0.6, scale = 1) +
theme_ridges() +
scale_x_log10(labels = scales::comma) +
scale_fill_viridis_d(option = "C") +
labs(
title = "Ethnicity"
) +
theme(
legend.position = "none",
panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA),
strip.text = element_text(size = 10, face = "bold"),
axis.title = element_text(size = 12),
axis.text = element_text(size = 8),
plot.title = element_text(size = 14, face = "bold"),
plot.subtitle = element_text(size = 12)
) +
facet_wrap(~ ethnicity, nrow = 2)
# Age Plot
plot_congress_gender_traffic_age <- ggplot(yearly_traffic_congress, aes(x = total_traffic, y = gender, fill = gender)) +
geom_density_ridges(alpha = 0.6, scale = 1) +
theme_ridges() +
scale_x_log10(labels = scales::comma) +
scale_fill_viridis_d(option = "C") +
labs(
title = "Age"
) +
theme(
legend.position = "none",
panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA),
strip.text = element_text(size = 10, face = "bold"),
axis.title = element_text(size = 12),
axis.text = element_text(size = 6.5),
plot.title = element_text(size = 14, face = "bold"),
plot.subtitle = element_text(size = 12)
) +
facet_wrap(~ age, nrow = 2)
# Party Plot
plot_congress_gender_traffic_pty <- ggplot(yearly_traffic_us_congress_pty, aes(x = total_traffic, y = gender, fill = gender)) +
geom_density_ridges(alpha = 0.6, scale = 1) +
theme_ridges() +
scale_x_log10(labels = scales::comma) +
scale_fill_viridis_d(option = "C") +
labs(
title = "Party"
) +
theme(
legend.position = "none",
panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA),
strip.text = element_text(size = 10, face = "bold"),
axis.title = element_text(size = 12),
axis.text = element_text(size = 8),
plot.title = element_text(size = 14, face = "bold"),
plot.subtitle = element_text(size = 12)
) +
facet_wrap(~ party, nrow = 2)
# Modify individual plots to remove axis labels
plot_congress_gender_traffic_eth <- plot_congress_gender_traffic_eth +
labs(title = "Ethnicity", x = NULL, y = NULL) +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_blank()
)
plot_congress_gender_traffic_age <- plot_congress_gender_traffic_age +
labs(title = "Age", x = NULL, y = NULL) +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_blank()
)
plot_congress_gender_traffic_pty <- plot_congress_gender_traffic_pty +
labs(title = "Party", x = NULL, y = NULL) +
theme(
plot.title = element_text(hjust = 0.5),
axis.title = element_blank()
)
# Combine plots vertically with shared title
combined_plot_3 <- plot_congress_gender_traffic_eth /
plot_congress_gender_traffic_age /
plot_congress_gender_traffic_pty +
plot_annotation(
theme = theme(
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5)
)
) &
theme(
plot.margin = margin(t = 10, r = 10, b = 20, l = 10),
axis.title.x = element_text(size = 8, face = "bold", hjust = 0.5)
) &
xlab("Total Traffic (log)")
# Display the combined plot
combined_plot_3
View(plot_congress_gender_traffic_age)
tax_rates_gasoline <- data.table(
State = c('AC', 'AL', 'AM', 'AP', 'BA', 'CE', 'DF', 'ES', 'GO', 'MA',
'MG', 'MS', 'MT', 'PA', 'PB', 'PE', 'PI', 'PR', 'RJ', 'RN',
'RO', 'RR', 'RS', 'SC', 'SE', 'SP', 'TO'),
CIDE_Gaso_A = rep(0.1, 27),
PIS_COFINS_Gaso_A = rep(0.7925, 27),
PIS_COFINS_AEAC = rep(0.1309, 27),
AEAC_Mistura = rep('27%', 27),
CIDE_PIS_COF_Gaso_C = rep(0.6869, 27),
ICMS = rep(1.47, 27),
Tributos_TOTAL = rep(2.157, 27)
)
install.packages("data.table")
tax_rates_gasoline <- data.table(
State = c('AC', 'AL', 'AM', 'AP', 'BA', 'CE', 'DF', 'ES', 'GO', 'MA',
'MG', 'MS', 'MT', 'PA', 'PB', 'PE', 'PI', 'PR', 'RJ', 'RN',
'RO', 'RR', 'RS', 'SC', 'SE', 'SP', 'TO'),
CIDE_Gaso_A = rep(0.1, 27),
PIS_COFINS_Gaso_A = rep(0.7925, 27),
PIS_COFINS_AEAC = rep(0.1309, 27),
AEAC_Mistura = rep('27%', 27),
CIDE_PIS_COF_Gaso_C = rep(0.6869, 27),
ICMS = rep(1.47, 27),
Tributos_TOTAL = rep(2.157, 27)
)
tax_rates_gasoline <- data.table(
State = c('AC', 'AL', 'AM', 'AP', 'BA', 'CE', 'DF', 'ES', 'GO', 'MA',
'MG', 'MS', 'MT', 'PA', 'PB', 'PE', 'PI', 'PR', 'RJ', 'RN',
'RO', 'RR', 'RS', 'SC', 'SE', 'SP', 'TO'),
CIDE_Gaso_A = rep(0.1, 27),
PIS_COFINS_Gaso_A = rep(0.7925, 27),
PIS_COFINS_AEAC = rep(0.1309, 27),
AEAC_Mistura = rep('27%', 27),
CIDE_PIS_COF_Gaso_C = rep(0.6869, 27),
ICMS = rep(1.47, 27),
Tributos_TOTAL = rep(2.157, 27)
)
tax_rates_gasoline <- data.table::data.table(
State = c('AC', 'AL', 'AM', 'AP', 'BA', 'CE', 'DF', 'ES', 'GO', 'MA',
'MG', 'MS', 'MT', 'PA', 'PB', 'PE', 'PI', 'PR', 'RJ', 'RN',
'RO', 'RR', 'RS', 'SC', 'SE', 'SP', 'TO'),
CIDE_Gaso_A = rep(0.1, 27),
PIS_COFINS_Gaso_A = rep(0.7925, 27),
PIS_COFINS_AEAC = rep(0.1309, 27),
AEAC_Mistura = rep('27%', 27),
CIDE_PIS_COF_Gaso_C = rep(0.6869, 27),
ICMS = rep(1.47, 27),
Tributos_TOTAL = rep(2.157, 27)
)
View(tax_rates_gasoline)
pacman::p_load(
readr,        # Read CSV files
readxl,       # Read Excel files
dplyr,        # Data manipulation
tidyr,        # Data tidying and reshaping
ggplot2,      # Create data visualizations
scales,       # Format axes and legends (percentages, currencies)
stringr,      # String manipulation
lubridate,    # Date and time manipulation
basedosdados, # Access to Brazilian public data via BigQuery
geobr,        # Brazilian geographic data
sf,           # Handle spatial/geographic data
viridis,      # Color palettes for data visualization
stringi,      # Advanced string manipulation (e.g., Unicode support)
gt,           # Create beautiful tables for reporting results
webshot2,     # Capture screenshots of web pages or save HTML widgets as images
RColorBrewer, # Additional color palettes for plotting
data.table
)
tax_rates_ethanol <- data.table::data.frame(
Estado = c("AC", "AL", "AM", "AP", "BA", "CE", "DF", "ES", "GO", "MA", "MG", "MS", "MT*", "PA", "PB", "PE", "PI", "PR", "RJ", "RN", "RO", "RR", "RS", "SC", "SE", "SP", "TO"),
PIS_COFINS_produtor = rep(0.1309, 27),
PIS_COFINS_distribuidora = rep(0.1109, 27),
PIS_COFINS_etanol = rep(0.2418, 27),
ICMS_percent = c(19.00, 21.00, 20.00, 18.00, 12.86, 20.00, 13.00, 17.00, 14.17, 22.00, 13.08, 11.33, 17.00, 16.96, 15.33, 15.52, 14.90, 12.00, 16.87, 15.33, 17.50, 20.00, 17.00, 17.00, 19.00, 12.00, 20.00),
PMPF_01_02 = c(5.1203, 4.8097, 4.9639, 5.2900, 4.5900, 4.8696, 4.4000, 4.4095, 4.2630, 4.6300, 4.3529, 4.0526, 4.0601, 4.7045, 3.9832, 4.3800, 4.4000, 4.2766, 4.4900, 4.4500, 5.0870, 4.9500, 4.5116, 4.4471, 4.5410, 3.6700, 4.7400),
ICMS_total = c(0.9729, 1.0100, 0.9928, 0.9522, 0.5903, 0.9739, 0.5720, 0.7496, 0.6041, 1.0186, 0.5694, 0.4592, 0.3451, 0.7979, 0.6106, 0.6798, 0.6556, 0.5132, 0.7575, 0.6822, 0.8902, 0.9900, 0.7670, 0.7560, 0.8628, 0.4404, 0.9480),
Tributos_total = c(1.215, 1.252, 1.235, 1.194, 0.832, 1.216, 0.814, 0.991, 0.846, 1.260, 0.811, 0.701, 0.587, 1.040, 0.852, 0.922, 0.897, 0.755, 0.999, 0.924, 1.132, 1.232, 1.009, 0.998, 1.105, 0.682, 1.190)
)
tax_rates_ethanol <- data.table::data.table(
Estado = c("AC", "AL", "AM", "AP", "BA", "CE", "DF", "ES", "GO", "MA", "MG", "MS", "MT*", "PA", "PB", "PE", "PI", "PR", "RJ", "RN", "RO", "RR", "RS", "SC", "SE", "SP", "TO"),
PIS_COFINS_produtor = rep(0.1309, 27),
PIS_COFINS_distribuidora = rep(0.1109, 27),
PIS_COFINS_etanol = rep(0.2418, 27),
ICMS_percent = c(19.00, 21.00, 20.00, 18.00, 12.86, 20.00, 13.00, 17.00, 14.17, 22.00, 13.08, 11.33, 17.00, 16.96, 15.33, 15.52, 14.90, 12.00, 16.87, 15.33, 17.50, 20.00, 17.00, 17.00, 19.00, 12.00, 20.00),
PMPF_01_02 = c(5.1203, 4.8097, 4.9639, 5.2900, 4.5900, 4.8696, 4.4000, 4.4095, 4.2630, 4.6300, 4.3529, 4.0526, 4.0601, 4.7045, 3.9832, 4.3800, 4.4000, 4.2766, 4.4900, 4.4500, 5.0870, 4.9500, 4.5116, 4.4471, 4.5410, 3.6700, 4.7400),
ICMS_total = c(0.9729, 1.0100, 0.9928, 0.9522, 0.5903, 0.9739, 0.5720, 0.7496, 0.6041, 1.0186, 0.5694, 0.4592, 0.3451, 0.7979, 0.6106, 0.6798, 0.6556, 0.5132, 0.7575, 0.6822, 0.8902, 0.9900, 0.7670, 0.7560, 0.8628, 0.4404, 0.9480),
Tributos_total = c(1.215, 1.252, 1.235, 1.194, 0.832, 1.216, 0.814, 0.991, 0.846, 1.260, 0.811, 0.701, 0.587, 1.040, 0.852, 0.922, 0.897, 0.755, 0.999, 0.924, 1.132, 1.232, 1.009, 0.998, 1.105, 0.682, 1.190)
)
View(tax_rates_ethanol)
tax_rates_diesel <- data.table::data.table(
Estado = c("AC", "AL", "AM", "AP", "BA", "CE", "DF", "ES", "GO", "MA", "MG", "MS", "MT", "PA", "PB", "PE", "PI", "PR", "RJ", "RN", "RO", "RR", "RS", "SC", "SE", "SP", "TO"),
CIDE_Diesel_A = rep(0.0000, 27),
PIS_COFINS_biodiesel = rep(0.3515, 27),
biodiesel_mistura = rep(0.1480, 27),
biodiesel_mistura_percent = rep(14, 27),
cide_pis_cofins_diesel_S_500 = rep(0.3230, 27),
ICMS_Total = rep(1.1200, 27),
Tributos_Total = rep(1.443, 27)
)
tax_rates_diesel_S500 <- data.table::data.table(
Estado = c("AC", "AL", "AM", "AP", "BA", "CE", "DF", "ES", "GO", "MA", "MG", "MS", "MT", "PA", "PB", "PE", "PI", "PR", "RJ", "RN", "RO", "RR", "RS", "SC", "SE", "SP", "TO"),
CIDE_Diesel_A = rep(0.0000, 27),
PIS_COFINS_biodiesel = rep(0.3515, 27),
biodiesel_mistura = rep(0.1480, 27),
biodiesel_mistura_percent = rep(14, 27),
cide_pis_cofins_diesel_S_500 = rep(0.3230, 27),
ICMS_Total = rep(1.1200, 27),
Tributos_Total = rep(1.443, 27)
)
tax_rates_diesel_S10 <- data.frame(
Estado = c("AC", "AL", "AM", "AP", "BA", "CE", "DF", "ES", "GO", "MA", "MG", "MS", "MT", "PA", "PB", "PE", "PI", "PR", "RJ", "RN", "RO", "RR", "RS", "SC", "SE", "SP", "TO"),
CIDE_Diesel_A = rep(0.0000, 27),
PIS_COFINS_biodiesel = rep(0.3515, 27),
biodiesel_mistura = rep(0.1480, 27),
biodiesel_mistura_percent = rep(14, 27),
cide_pis_cofins_diesel_S_10 = rep(0.3230, 27),
ICMS_Total = rep(1.1200, 27),
Tributos_Total = rep(1.443, 27)
)
tax_rates_diesel_S500 <- data.frame(
Estado = c("AC", "AL", "AM", "AP", "BA", "CE", "DF", "ES", "GO", "MA", "MG", "MS", "MT", "PA", "PB", "PE", "PI", "PR", "RJ", "RN", "RO", "RR", "RS", "SC", "SE", "SP", "TO"),
CIDE_Diesel_A = rep(0.0000, 27),
PIS_COFINS_biodiesel = rep(0.3515, 27),
biodiesel_mistura = rep(0.1480, 27),
biodiesel_mistura_percent = rep(14, 27),
cide_pis_cofins_diesel_S_500 = rep(0.3230, 27),
ICMS_Total = rep(1.1200, 27),
Tributos_Total = rep(1.443, 27)
)
tax_rates_gasoline <- data.frame(
State = c('AC', 'AL', 'AM', 'AP', 'BA', 'CE', 'DF', 'ES', 'GO', 'MA',
'MG', 'MS', 'MT', 'PA', 'PB', 'PE', 'PI', 'PR', 'RJ', 'RN',
'RO', 'RR', 'RS', 'SC', 'SE', 'SP', 'TO'),
CIDE_Gaso_A = rep(0.1, 27),
PIS_COFINS_Gaso_A = rep(0.7925, 27),
PIS_COFINS_AEAC = rep(0.1309, 27),
AEAC_Mistura = rep('27%', 27),
CIDE_PIS_COF_Gaso_C = rep(0.6869, 27),
ICMS = rep(1.47, 27),
Tributos_TOTAL = rep(2.157, 27)
)
tax_rates_ethanol <- data.frame(
Estado = c("AC", "AL", "AM", "AP", "BA", "CE", "DF", "ES", "GO", "MA", "MG", "MS", "MT*", "PA", "PB", "PE", "PI", "PR", "RJ", "RN", "RO", "RR", "RS", "SC", "SE", "SP", "TO"),
PIS_COFINS_produtor = rep(0.1309, 27),
PIS_COFINS_distribuidora = rep(0.1109, 27),
PIS_COFINS_etanol = rep(0.2418, 27),
ICMS_percent = c(19.00, 21.00, 20.00, 18.00, 12.86, 20.00, 13.00, 17.00, 14.17, 22.00, 13.08, 11.33, 17.00, 16.96, 15.33, 15.52, 14.90, 12.00, 16.87, 15.33, 17.50, 20.00, 17.00, 17.00, 19.00, 12.00, 20.00),
PMPF_01_02 = c(5.1203, 4.8097, 4.9639, 5.2900, 4.5900, 4.8696, 4.4000, 4.4095, 4.2630, 4.6300, 4.3529, 4.0526, 4.0601, 4.7045, 3.9832, 4.3800, 4.4000, 4.2766, 4.4900, 4.4500, 5.0870, 4.9500, 4.5116, 4.4471, 4.5410, 3.6700, 4.7400),
ICMS_total = c(0.9729, 1.0100, 0.9928, 0.9522, 0.5903, 0.9739, 0.5720, 0.7496, 0.6041, 1.0186, 0.5694, 0.4592, 0.3451, 0.7979, 0.6106, 0.6798, 0.6556, 0.5132, 0.7575, 0.6822, 0.8902, 0.9900, 0.7670, 0.7560, 0.8628, 0.4404, 0.9480),
Tributos_total = c(1.215, 1.252, 1.235, 1.194, 0.832, 1.216, 0.814, 0.991, 0.846, 1.260, 0.811, 0.701, 0.587, 1.040, 0.852, 0.922, 0.897, 0.755, 0.999, 0.924, 1.132, 1.232, 1.009, 0.998, 1.105, 0.682, 1.190)
)
tax_rates_diesel_S500 <- data.frame(
Estado = c("AC", "AL", "AM", "AP", "BA", "CE", "DF", "ES", "GO", "MA", "MG", "MS", "MT", "PA", "PB", "PE", "PI", "PR", "RJ", "RN", "RO", "RR", "RS", "SC", "SE", "SP", "TO"),
CIDE_Diesel_A = rep(0.0000, 27),
PIS_COFINS_biodiesel = rep(0.3515, 27),
biodiesel_mistura = rep(0.1480, 27),
biodiesel_mistura_percent = rep(14, 27),
cide_pis_cofins_diesel_S_500 = rep(0.3230, 27),
ICMS_Total = rep(1.1200, 27),
Tributos_Total = rep(1.443, 27)
)
tax_rates_diesel_S10 <- data.frame(
Estado = c("AC", "AL", "AM", "AP", "BA", "CE", "DF", "ES", "GO", "MA", "MG", "MS", "MT", "PA", "PB", "PE", "PI", "PR", "RJ", "RN", "RO", "RR", "RS", "SC", "SE", "SP", "TO"),
CIDE_Diesel_A = rep(0.0000, 27),
PIS_COFINS_biodiesel = rep(0.3515, 27),
biodiesel_mistura = rep(0.1480, 27),
biodiesel_mistura_percent = rep(14, 27),
cide_pis_cofins_diesel_S_10 = rep(0.3230, 27),
ICMS_Total = rep(1.1200, 27),
Tributos_Total = rep(1.443, 27)
)
tax_rates_gasoline_premium <- data.frame(
Estado = c("AC", "AL", "AM", "AP", "BA", "CE", "DF", "ES", "GO", "MA", "MG", "MS", "MT", "PA", "PB", "PE", "PI", "PR", "RJ", "RN", "RO", "RR", "RS", "SC", "SE", "SP", "TO"),
CIDE_GasoA_Pr = rep(0.1000, 27),
PIS_COFINS_GasoA_Pr = rep(0.7925, 27),
PIS_COFINS_AEAC = rep(0.1309, 27),
AEAC_Mistura_percent = rep(25, 27),
CIDE_PIS_COF_Gaso_A_Pr = rep(0.7021, 27),
ICMS_Total = rep(1.4700, 27),
Tributos_total = rep(2.172, 27)
)
source("./2_code/00_packages.R")
getwd()
setwd("C:/Users/joaov/Dropbox/R Assignments/master-thesis")
source("./2_code/00_packages.R")
install.packages("hardhat")
install.packages("sparsevctrs")
install.packages("sparsevctrs")
library(caret)
train_index <- createDataPartition(df_all$electric, p = 0.8, list = FALSE)
detach("package:caret", unload = TRUE)
install.packages("sparsevctrs")
setwd("C:/Users/joaov/Dropbox/R Assignments/master-thesis")
source("./2_code/00_packages.R")
pacman::p_load(
readr,        # Read CSV files
readxl,       # Read Excel files
dplyr,        # Data manipulation
tidyr,        # Data tidying and reshaping
ggplot2,      # Create data visualizations
scales,       # Format axes and legends (percentages, currencies)
stringr,      # String manipulation
lubridate,    # Date and time manipulation
basedosdados, # Access to Brazilian public data via BigQuery
geobr,        # Brazilian geographic data
sf,           # Handle spatial/geographic data
viridis,      # Color palettes for data visualization
stringi,      # Advanced string manipulation (e.g., Unicode support)
gt,           # Create beautiful tables for reporting results
webshot2,     # Capture screenshots of web pages or save HTML widgets as images
RColorBrewer, # Additional color palettes for plotting
httr,
Metrics,
caret
)
