subtitle = "Source: Special Secretariat of the Federal Revenue of Brazil (RFB), 2024",
caption = "Note: Data related to firms registered under G category only, which includes gas stations and retail sale of fuels."
) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),  # Tilt x-axis labels
plot.caption = element_text(hjust = 0))
setwd("C:/Users/joaov/Dropbox/R Assignments/master-thesis/")
# Loading the data frames
fleet_2013_2024_clean <- read_csv("./3_processed_data/fleet_2013_2024_id_clean.csv")
price_df              <- read_csv("./3_processed_data/fipe_price_monthly_trends_deflated.csv")
income_data_wide_uf   <- read_csv("./3_processed_data/income_data_wide_uf.csv")
# Further transformation for the models
## Organizing population data and adding months
months <- fleet_2013_2024_clean %>%
arrange(date) %>%
distinct(date) %>%
mutate(months_nr = row_number())
fleet_df <- fleet_2013_2024_clean %>%
mutate(ev_pc        = electric / populacao,
ff_pc        = (gasoline+diesel)/populacao,
log_electric = log(electric),
log_ff       = log(gasoline+diesel),
log_pop      = log(populacao)) %>%
filter(log_electric >= 0) %>%
left_join(months, by="date")
fleet_df_b_city <- fleet_df %>%
left_join(price_df, by = "date")
fleet_df_b_uf <- fleet_df %>%
left_join(price_df, by = "date") %>%
group_by(sigla_uf, date, months_nr) %>%
summarize(diesel     = sum(diesel),
ethanol    = sum(ethanol),
gasoline   = sum(gasoline),
other      = sum(other),
electric   = sum(electric),
gas        = sum(gas),
population = sum(populacao))
## Adding price information and grouping by state
fleet_df_b_uf <- fleet_df %>%
left_join(price_df, by = "date") %>%
group_by(sigla_uf, date, year, month, months_nr) %>%
summarize(diesel     = sum(diesel),
ethanol    = sum(ethanol),
gasoline   = sum(gasoline),
other      = sum(other),
electric   = sum(electric),
gas        = sum(gas),
population = sum(populacao),
mean_gas   = mean(mean_price_gasoline),
mean_hyb   = mean(mean_price_hybrid),
mean_ev    = mean(mean_price_electric),
median_gas = mean(median_price_gasoline),
median_hyb = mean(median_price_hybrid),
median_ev  = mean(median_price_electric),
min_gas    = mean(min_price_gasoline),
min_hyb    = mean(min_price_hybrid),
min_ev     = mean(min_price_electric)) %>%
mutate(ff_pc        = (gasoline+diesel)/population,
log_ff       = log(gasoline+diesel),
log_pop      = log(population))
## Adding income distribution data
fleet_df_c <- fleet_df_b_uf %>%
left_join(income_data_wide_uf, by = c("year", "sigla_uf")) %>%
drop_na()
fleet_2013_2024_clean <- fleet_2013_2024_clean %>%
mutate(id_municipio = as.character(id_municipio))
stargazer(as.data.frame(fleet_2013_2024_clean),
title="Table 1: Summary statistics of data on pop. size and vehicle stock",
column.sep.width = "15pt",
digits=0,
type = "html")
ggplot(data = fleet_df_c, aes(x=population, y=electric)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "red") + # Add linear regression line
ggtitle("EV Adoption vs. Population Size in in Brazilian States")+
theme_bw() +
ylab("Number of Registered Electric Vehicles (log)") +
xlab("Population Size (log)") +
scale_x_continuous(trans = "log10", labels = scales::comma) + # Log scale for x-axis with meaningful labels
scale_y_continuous(trans = "log10", labels = scales::comma) +  # Log scale for y-axis with meaningful labels
facet_wrap(~year, nrow = 3, ncol = 4)  +
theme(
plot.title = element_text(size = 12),
axis.title = element_text(size = 10),
axis.text = element_text(size = 8),
axis.text.x = element_text(angle = 45, hjust = 1)
)
stargazer(as.data.frame(price_df),
title="Table 2: Summary statistics of data on vehicle price",
column.sep.width = "3pt",
digits=0,
type = "html")
fleet_df_c %>%
filter(year > 2017) %>%
group_by(date) %>%
summarize(
ev_price = mean(min_ev)/1000,
electric = mean(electric)) %>%
ggplot(aes(x=ev_price, y=electric)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "red") + # Add linear regression line
labs(
title = "BEV Adoption vs. BEV minimum price in Brazil (2018-2022)",
) +
theme_bw() +
ylab("Number of Registered BEV (log)") +
xlab("BEV average price (thousand BRL)") +
scale_x_continuous(labels = scales::comma) + # Log scale for x-axis with meaningful labels
scale_y_continuous(trans = "log10", labels = scales::comma) +
theme(
plot.title = element_text(size = 12),
axis.title = element_text(size = 10),
axis.text = element_text(size = 8),
axis.text.x = element_text(angle = 0, hjust = 1)
)
stargazer(as.data.frame(income_data_wide_uf),
title="Table 3: Summary statistics of data on income distribution",
column.sep.width = "3pt",
digits=0,
type = "html")
fleet_df_c %>%
group_by(year, sigla_uf) %>%
summarize(
avg_taxable_income_100 = mean(avg_taxable_income_100),
electric = mean(electric)) %>%
ggplot(aes(x=avg_taxable_income_100, y=electric)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "red") + # Add linear regression line
ggtitle("BEV Adoption vs. Average income of top 100th Percentile in Brazilian States")+
theme_bw() +
ylab("Number of Registered BEVs (log)") +
xlab("Average Taxable Income of the 100th Percentile (log)") +
scale_x_continuous(trans = "log10", labels = scales::comma) + # Log scale for x-axis with meaningful labels
scale_y_continuous(trans = "log10", labels = scales::comma) +  # Log scale for y-axis with meaningful labels
facet_wrap(~year, nrow = 3, ncol = 4) +
theme(
plot.title = element_text(size = 12),
axis.title = element_text(size = 10),
axis.text = element_text(size = 8),
axis.text.x = element_text(angle = 45, hjust = 1)
)
fleet_df_c %>%
group_by(year, sigla_uf) %>%
summarize(
avg_taxable_income_50 = mean(avg_taxable_income_50),
electric = mean(electric)) %>%
ggplot(aes(x=avg_taxable_income_50, y=electric)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "red") + # Add linear regression line
ggtitle("BEV Adoption vs. Average income of the top 50th Percentile in Brazilian State")+
theme_bw() +
ylab("Number of Registered BEVs (log)") +
xlab("Average Taxable Income of the 50th Percentile (log)") +
scale_x_continuous(trans = "log10", labels = scales::comma) + # Log scale for x-axis with meaningful labels
scale_y_continuous(trans = "log10", labels = scales::comma) +  # Log scale for y-axis with meaningful labels
facet_wrap(~year, nrow = 3, ncol = 4)+
theme(
plot.title = element_text(size = 12),
axis.title = element_text(size = 10),
axis.text = element_text(size = 8),
axis.text.x = element_text(angle = 45, hjust = 1)
)
# Also not true for the bottom 10 percentile
fleet_df_c %>%
group_by(year, sigla_uf) %>%
summarize(
avg_taxable_income_10 = mean(avg_taxable_income_10),
electric = mean(electric)) %>%
ggplot(aes(x=avg_taxable_income_10, y=electric)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "red") + # Add linear regression line
ggtitle("BEV Adoption vs. Average income of the bottom 10th Percentile in Brazilian State")+
theme_bw() +
ylab("Number of Registered BEVs (log)") +
xlab("Average Taxable Income of the 50th Percentile (log)") +
scale_x_continuous(labels = scales::comma) + # Log scale for x-axis with meaningful labels
scale_y_continuous(trans = "log10", labels = scales::comma) +  # Log scale for y-axis with meaningful labels
facet_wrap(~year, nrow = 3, ncol = 4)+
theme(
plot.title = element_text(size = 12),
axis.title = element_text(size = 10),
axis.text = element_text(size = 8),
axis.text.x = element_text(angle = 45, hjust = 1)
)
model1 <- lm(log(electric) ~ log(population) * months_nr,
data = fleet_df_c)
model2 <- lm(log(electric) ~ log(population) * months_nr + log(min_ev) + log(mean_gas) + log(mean_hyb),
data = fleet_df_c)
model3 <- lm(log(electric) ~ log(population) * months_nr + log(min_ev) + log(mean_gas) + log(mean_hyb) +
log(avg_taxable_income_50) + log(avg_taxable_income_100),
data = fleet_df_c)
stargazer(model1, model2, model3, type = "html",
title=
"Table 4: BEV stock regressed on population size, time, price & income (linear regression)",
single.row= FALSE,
column.labels =c("Model 1","Model 2", "Model 3", "Model 4"),
covariate.labels=c("Population (log)",
"Months",
"Vehicle price - electric (log)",
"Vehicle price - gasoline (log)",
"Vehicle price - hybrid (log)",
"Avg. Income - 50th perc. (log)",
"Avg. Income - 100th perc. (log)",
"Vehicle price - hybrid (log)",
"Months : Population (log)"),
keep.stat = c("rsq", "f"),
notes.align = "l",
dep.var.labels=c("EV stock (log)"))
panel_data <- pdata.frame(fleet_df_c, index = c("sigla_uf", "date"))
fe_model_1 <- plm(log(electric) ~ log(population) + as.factor(months_nr),
data  = panel_data,
model = "within")
fe_model_2 <- plm(log(electric) ~ log(population) + log(min_ev) + log(mean_gas) + log(mean_hyb) + as.factor(months_nr),
data  = panel_data,
model = "within")
fe_model_3 <- plm(log(electric) ~ log(population) + log(min_ev) + log(mean_gas) + log(mean_hyb) + log(avg_taxable_income_50) + log(avg_taxable_income_100) + as.factor(months_nr),
data  = panel_data,
model = "within")
stargazer(fe_model_1, fe_model_2, fe_model_3, type = "html",
title = "Table 5: BEV stock regressed on population size, time, vehicle prices and income with panel data and fixed effects",
single.row = FALSE,
dep.var.labels = c("EV stock (log)"),
covariate.labels=c("Population (log)",
"Vehicle price - electric (log)",
"Vehicle price - gasoline (log)",
"Vehicle price - hybrid (log)",
"Avg. Income - 50th perc. (log)",
"Avg. Income - 100th perc. (log)"),
column.labels = c("Model 1", "Model 2", "Model 3"),
keep.stat = c("rsq", "f"),
notes.align = "l",
omit = "as.factor\\(months_nr\\)[0-9]+")
# Create training  feature matrices
# we use model.matrix(...)[, -1] to discard the intercept
library(glmnet)
X <- modglmnetX <- model.matrix(log(electric) ~ ., fleet_df_c)[, -1]
Y <- log(fleet_df_c$electric)
# Ridge model
ridge <- glmnet(
x = X,
y = Y,
alpha = 0
)
# Lasso model
lasso <- glmnet(
x = X,
y = Y,
alpha = 1
)
par(mfrow = c(1, 2))
# plot ridge model
plot(ridge, xvar = "lambda", main = "Ridge penalty\n\n")
# plot lasso model
plot(lasso, xvar = "lambda", main = "Lasso penalty\n\n")
ridge$lambda.min
ridge$lambda.1se
lasso$lambda.min
lasso$lambda.1se
# for reproducibility
set.seed(123)
# grid search across
cv_glmnet <- train(
x = X,
y = Y,
method = "glmnet",
preProc = c("zv", "center", "scale"),
trControl = trainControl(method = "cv", number = 10),
tuneLength = 10
)
cv_glmnet$results %>%
filter(alpha == cv_glmnet$bestTune$alpha, lambda == cv_glmnet$bestTune$lambda)
# predict number of electric vehicles on training data
pred <- predict(cv_glmnet, X)
# compute RMSE of transformed predicted
RMSE(exp(pred), exp(Y))
fleet_df_c %>%
select(year, sigla_uf, electric) %>%
filter(year == 2022) %>%
group_by(sigla_uf) %>%
summarize(
BEVs  = max(electric)
) %>%
arrange((BEVs)) %>%
mutate(sigla_uf = factor(sigla_uf, levels = sigla_uf)) %>%
ggplot(aes(y = sigla_uf, x = BEVs)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label = comma(BEVs)), hjust = -0.1, size = 3) +
scale_x_continuous(labels = comma) +
ggtitle("Number of BEVs registered per Brazilian State in 2022") +
xlab("Number of Observations") +
ylab("Brazilian States") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
vip(cv_glmnet, num_features = 20, geom = "point")
fleet_df_d <- fleet_df_c %>%
select(-c(population, date, year))
# Creating the MARS model object
mars1 <- earth(
log(electric) ~ .,
data = fleet_df_d
)
summary(mars1)
# Ploting the model selection
plot(mars1, which = 1)
mars2 <- earth(
log(electric) ~ .,
data = fleet_df_d,
degree = 2
)
# Summary of the most important predictors and interactions
summary(mars2) %>% .$coefficients %>% head(10)
# Preparing a grid with hyperparameters
hyper_grid <- expand.grid(
degree = 1:3,
nprune = seq(2, 100, length.out = 10) %>% floor()
)
# Training the algorithm
set.seed(123)  # for reproducibility
cv_mars <- train(
x = subset(fleet_df_d, select = -electric),
y = fleet_df_d$electric,
method = "earth",
metric = "RMSE",
trControl = trainControl(method = "cv", number = 10),
tuneGrid = hyper_grid
)
fleet_df_c %>%
filter(year > 2017) %>%
group_by(date, year) %>%
summarize(
ev_price = mean(min_ev)/1000,
electric = mean(electric)) %>%
ggplot(aes(x=ev_price, y=electric)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "red") + # Add linear regression line
labs(
title = "BEV Adoption vs. BEV minimum price in Brazil (2018-2022)",
) +
theme_bw() +
ylab("Number of Registered BEV (log)") +
xlab("BEV average price (thousand BRL)") +
scale_x_continuous(labels = scales::comma) + # Log scale for x-axis with meaningful labels
scale_y_continuous(trans = "log10", labels = scales::comma) +
theme(
plot.title = element_text(size = 12),
axis.title = element_text(size = 10),
axis.text = element_text(size = 8),
axis.text.x = element_text(angle = 0, hjust = 1)
) +
facet_wrap(~year, nrow = 3, ncol = 4)
fleet_df_c %>%
filter(year > 2015) %>%
group_by(date, year) %>%
summarize(
ev_price = mean(min_ev)/1000,
electric = mean(electric)) %>%
ggplot(aes(x=ev_price, y=electric)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "red") + # Add linear regression line
labs(
title = "BEV Adoption vs. BEV minimum price in Brazil (2018-2022)",
) +
theme_bw() +
ylab("Number of Registered BEV (log)") +
xlab("BEV average price (thousand BRL)") +
scale_x_continuous(labels = scales::comma) + # Log scale for x-axis with meaningful labels
scale_y_continuous(trans = "log10", labels = scales::comma) +
theme(
plot.title = element_text(size = 12),
axis.title = element_text(size = 10),
axis.text = element_text(size = 8),
axis.text.x = element_text(angle = 0, hjust = 1)
) +
facet_wrap(~year, nrow = 3, ncol = 4)
fleet_df_c %>%
filter(year > 2015) %>%
mutate(month = floor_date(date, "month")) %>%
group_by(month) %>%
summarize(
ev_price = mean(min_ev)/1000,
electric = mean(electric)) %>%
ggplot(aes(x = month, y = ev_price)) +
geom_line() +
geom_point() +
labs(
title = "BEV Average Price Evolution in Brazil (2016-2022)",
x = "Date",
y = "BEV Average Price (thousand BRL)"
) +
theme_bw() +
scale_x_date(date_breaks = "6 months", date_labels = "%b %Y") +
scale_y_continuous(labels = scales::comma) +
theme(
plot.title = element_text(size = 12),
axis.title = element_text(size = 10),
axis.text = element_text(size = 8),
axis.text.x = element_text(angle = 45, hjust = 1)
)
fleet_df_c %>%
filter(year > 2015) %>%
mutate(month = floor_date(date, "month")) %>%
group_by(month) %>%
summarize(
ev_price = mean(min_ev)/1000,
electric = mean(electric)) %>%
ggplot(aes(x = month, y = ev_price)) +
geom_line() +
geom_point() +
labs(
title = "BEV Average Price Evolution in Brazil (2016-2022)",
x = "Date",
y = "BEV Average Price (thousand BRL)"
) +
theme_bw() +
scale_x_date(date_breaks = "6 months", date_labels = "%b %Y") +
scale_y_continuous(labels = scales::comma) +
theme(
plot.title = element_text(size = 12),
axis.title = element_text(size = 10),
axis.text = element_text(size = 8),
axis.text.x = element_text(angle = 45, hjust = 1)
)
fleet_df_c %>%
filter(year > 2015) %>%
group_by(year) %>%
summarize(
ev_price = mean(min_ev)/1000) %>%
ggplot(aes(x = year, y = ev_price)) +
geom_line() +
geom_point(size = 3) +
labs(
title = "BEV Average Price Evolution in Brazil (2016-2022)",
x = "Year",
y = "BEV Average Price (thousand BRL)"
) +
theme_bw() +
scale_x_continuous(breaks = seq(2016, 2022, 1)) +
scale_y_continuous(labels = scales::comma) +
theme(
plot.title = element_text(size = 12),
axis.title = element_text(size = 10),
axis.text = element_text(size = 8),
axis.text.x = element_text(angle = 0, hjust = 0.5)
)
fleet_df_c %>%
filter(year > 2017) %>%
group_by(year) %>%
summarize(
ev_price = mean(min_ev)/1000) %>%
ggplot(aes(x = year, y = ev_price)) +
geom_line() +
geom_point(size = 3) +
labs(
title = "BEV Average Price Evolution in Brazil (2016-2022)",
x = "Year",
y = "BEV Average Price (thousand BRL)"
) +
theme_bw() +
scale_x_continuous(breaks = seq(2016, 2022, 1)) +
scale_y_continuous(labels = scales::comma) +
theme(
plot.title = element_text(size = 12),
axis.title = element_text(size = 10),
axis.text = element_text(size = 8),
axis.text.x = element_text(angle = 0, hjust = 0.5)
)
fleet_df_c %>%
filter(year > 2016) %>%
group_by(year) %>%
summarize(
ev_price = mean(min_ev)/1000) %>%
ggplot(aes(x = year, y = ev_price)) +
geom_line() +
geom_point(size = 3) +
labs(
title = "BEV Average Price Evolution in Brazil (2016-2022)",
x = "Year",
y = "BEV Average Price (thousand BRL)"
) +
theme_bw() +
scale_x_continuous(breaks = seq(2016, 2022, 1)) +
scale_y_continuous(labels = scales::comma) +
theme(
plot.title = element_text(size = 12),
axis.title = element_text(size = 10),
axis.text = element_text(size = 8),
axis.text.x = element_text(angle = 0, hjust = 0.5)
)
fleet_df_c %>%
filter(year > 2016) %>%
mutate(month = floor_date(date, "month")) %>%
group_by(month) %>%
summarize(
ev_price = mean(min_ev)/1000,
electric = mean(electric)) %>%
ggplot(aes(x = month, y = ev_price)) +
geom_line() +
geom_point() +
labs(
title = "BEV Minimum Price Evolution in Brazil (2016-2022)",
x = "Date",
y = "Average Price (thousand BRL)"
) +
theme_bw() +
scale_x_date(date_breaks = "6 months", date_labels = "%b %Y") +
scale_y_continuous(labels = scales::comma) +
theme(
plot.title = element_text(size = 12),
axis.title = element_text(size = 10),
axis.text = element_text(size = 8),
axis.text.x = element_text(angle = 45, hjust = 1)
)
