values_fill = 0
)
View(fleet_2013_2024_clean)
fleet_2013_2024_clean <- fleet_2013_2024 %>%
mutate(
fuel_category = case_when(
str_detect(fuel, regex("ELETRICO|HIBRIDO", ignore_case = TRUE)) ~ "electric",
str_detect(fuel, regex("ALCOOL|ETANOL", ignore_case = TRUE)) ~ "ethanol",
str_detect(fuel, regex("GASOLINA", ignore_case = TRUE)) ~ "gasoline",
str_detect(fuel, regex("DIESEL", ignore_case = TRUE)) ~ "diesel",
str_detect(fuel, regex("GAS", ignore_case = TRUE)) ~ "gas",
TRUE ~ "other"
)
) %>%
group_by(month, year, date, fuel_category) %>%
summarise(total = sum(total, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(
names_from = fuel_category,
values_from = total,
values_fill = 0
)
View(fleet_2013_2024_clean)
fleet_2013_2024_clean <- fleet_2013_2024 %>%
mutate(
fuel_category = case_when(
str_detect(fuel, regex("ELETRICO", ignore_case = TRUE)) ~ "electric",
str_detect(fuel, regex("ALCOOL|ETANOL", ignore_case = TRUE)) ~ "ethanol",
str_detect(fuel, regex("GASOLINA", ignore_case = TRUE)) ~ "gasoline",
str_detect(fuel, regex("DIESEL", ignore_case = TRUE)) ~ "diesel",
str_detect(fuel, regex("GAS", ignore_case = TRUE)) ~ "gas",
TRUE ~ "other"
)
) %>%
group_by(month, year, date, fuel_category) %>%
summarise(total = sum(total, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(
names_from = fuel_category,
values_from = total,
values_fill = 0
)
fleet_2013_2024
fleet_2013_2024$fuel
unique(fleet_2013_2024$fuel)
fleet_2013_2024_clean <- fleet_2013_2024 %>%
mutate(
fuel_category = case_when(
str_detect(fuel, regex("ELETRICO/FONTE INTERNA", ignore_case = TRUE)) ~ "electric",
str_detect(fuel, regex("ALCOOL|ETANOL", ignore_case = TRUE)) ~ "ethanol",
str_detect(fuel, regex("GASOLINA", ignore_case = TRUE)) ~ "gasoline",
str_detect(fuel, regex("DIESEL", ignore_case = TRUE)) ~ "diesel",
str_detect(fuel, regex("GAS", ignore_case = TRUE)) ~ "gas",
TRUE ~ "other"
)
) %>%
group_by(month, year, date, fuel_category) %>%
summarise(total = sum(total, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(
names_from = fuel_category,
values_from = total,
values_fill = 0
)
fleet_2013_2024_clean <- fleet_2013_2024 %>%
mutate(
fuel_category = case_when(
str_detect(fuel, regex("ELETRICO/FONTE EXTERNA", ignore_case = TRUE)) ~ "electric",
str_detect(fuel, regex("ALCOOL|ETANOL", ignore_case = TRUE)) ~ "ethanol",
str_detect(fuel, regex("GASOLINA", ignore_case = TRUE)) ~ "gasoline",
str_detect(fuel, regex("DIESEL", ignore_case = TRUE)) ~ "diesel",
str_detect(fuel, regex("GAS", ignore_case = TRUE)) ~ "gas",
TRUE ~ "other"
)
) %>%
group_by(month, year, date, fuel_category) %>%
summarise(total = sum(total, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(
names_from = fuel_category,
values_from = total,
values_fill = 0
)
unique(fleet_2013_2024$fuel)
fleet_2013_2024_clean <- fleet_2013_2024 %>%
mutate(
fuel_category = case_when(
str_detect(fuel, regex("ELETRICO/FONTE EXTERNA", ignore_case = TRUE)) ~ "electric",
str_detect(fuel, regex("ALCOOL|ETANOL", ignore_case = TRUE)) ~ "ethanol",
str_detect(fuel, regex("GASOLINA", ignore_case = TRUE)) ~ "gasoline",
str_detect(fuel, regex("DIESEL", ignore_case = TRUE)) ~ "diesel",
str_detect(fuel, regex("GAS", ignore_case = TRUE)) ~ "gas",
TRUE ~ "other"
)
) %>%
group_by(month, year, date, fuel_category) %>%
summarise(total = sum(total, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(
names_from = fuel_category,
values_from = total,
values_fill = 0
)
plot_df <- fleet_2013_2024_clean %>%
group_by(year) %>%
summarize(electric = sum(electric),
gasoline = sum(gasoline),
ethanol  = sum(ethanol))
ggplot(plot_df, aes(x = as.integer(year), y = electric)) +
geom_line(color = "#69b3a2", linewidth = 2) +
theme_bw()+
scale_x_continuous(breaks = seq(2013, 2024, by = 1)) +
scale_y_continuous(labels = scales::comma) +
labs(
x = "Year",
y = "Number of Registered Vehicles",
title = "Evolution of Electric Vehicles in Brazil",
subtitle = "Source: National Traffic Secretariat, 2024")
plot_df <- fleet_2013_2024_clean %>%
group_by(year) %>%
summarize(electric = sum(electric),
gasoline = sum(gasoline),
ethanol  = sum(ethanol))
View(plot_df)
unique(fleet_2013_2024$fuel)
fleet_2013_2024_clean <- fleet_2013_2024 %>%
mutate(
fuel_category = case_when(
str_detect(fuel, regex("ELETRICO", ignore_case = TRUE)) ~ "electric",
str_detect(fuel, regex("ALCOOL|ETANOL", ignore_case = TRUE)) ~ "ethanol",
str_detect(fuel, regex("GASOLINA", ignore_case = TRUE)) ~ "gasoline",
str_detect(fuel, regex("DIESEL", ignore_case = TRUE)) ~ "diesel",
str_detect(fuel, regex("GAS", ignore_case = TRUE)) ~ "gas",
TRUE ~ "other"
)
) %>%
group_by(month, year, date, fuel_category) %>%
summarise(total = sum(total, na.rm = TRUE)) %>%
ungroup() %>%
pivot_wider(
names_from = fuel_category,
values_from = total,
values_fill = 0
)
fleet_2013_2024_clean <- fleet_2013_2024 %>%
mutate(
fuel_category = case_when(
# Ensure "ELETRICO" matches only pure electric vehicles
str_detect(fuel, regex("^ELETRICO$", ignore_case = TRUE)) ~ "electric",
str_detect(fuel, regex("ALCOOL|ETANOL", ignore_case = TRUE)) ~ "ethanol",
str_detect(fuel, regex("GASOLINA", ignore_case = TRUE)) ~ "gasoline",
str_detect(fuel, regex("DIESEL", ignore_case = TRUE)) ~ "diesel",
str_detect(fuel, regex("GAS", ignore_case = TRUE)) ~ "gas",
TRUE ~ "other" # Catch-all for uncategorized entries
)
) %>%
group_by(month, year, date, fuel_category) %>%
summarise(total = sum(total, na.rm = TRUE), .groups = "drop") %>% # Use `.groups = "drop"` for clarity
pivot_wider(
names_from = fuel_category,
values_from = total,
values_fill = list(total = 0) # Explicitly set `values_fill` to avoid ambiguity
)
fleet_2013_2024_clean <- fleet_2013_2024 %>%
mutate(
fuel_category = case_when(
# Ensure "ELETRICO" matches only pure electric vehicles
str_detect(fuel, regex("^ELETRICO$|ELETRICO/FONTE EXTERNA", ignore_case = TRUE)) ~ "electric",
str_detect(fuel, regex("ALCOOL|ETANOL", ignore_case = TRUE)) ~ "ethanol",
str_detect(fuel, regex("GASOLINA", ignore_case = TRUE)) ~ "gasoline",
str_detect(fuel, regex("DIESEL", ignore_case = TRUE)) ~ "diesel",
str_detect(fuel, regex("GAS", ignore_case = TRUE)) ~ "gas",
TRUE ~ "other" # Catch-all for uncategorized entries
)
) %>%
group_by(month, year, date, fuel_category) %>%
summarise(total = sum(total, na.rm = TRUE), .groups = "drop") %>% # Use `.groups = "drop"` for clarity
pivot_wider(
names_from = fuel_category,
values_from = total,
values_fill = list(total = 0) # Explicitly set `values_fill` to avoid ambiguity
)
plot_df %>%
select(year,electric) %>% #
ggplot(aes(x = as.integer(year), y = electric)) +
geom_line(color = "#69b3a2", linewidth = 2) +
theme_bw()+
scale_x_continuous(breaks = seq(2013, 2024, by = 1)) +
scale_y_continuous(labels = scales::comma) +
labs(
x = "Year",
y = "Number of Registered Vehicles",
title = "Evolution of Electric Vehicles in Brazil",
subtitle = "Source: National Traffic Secretariat, 2024")
plot_df
plot_df %>%
select(year,electric) %>% #
ggplot(aes(x = as.integer(year), y = electric)) +
geom_line(color = "#69b3a2", linewidth = 2) +
theme_bw()+
scale_x_continuous(breaks = seq(2013, 2024, by = 1)) +
scale_y_continuous(labels = scales::comma) +
labs(
x = "Year",
y = "Number of Registered Vehicles",
title = "Evolution of Electric Vehicles in Brazil",
subtitle = "Source: National Traffic Secretariat, 2024")
ggplot(fleet_2013_2024_clean, aes(x = as.integer(year), y = electric)) +
ggplot(fleet_2013_2024_clean, aes(x = as.integer(year), y = electric)) +
geom_line(color = "#69b3a2", linewidth = 2) +
theme_bw()+
scale_x_continuous(breaks = seq(2013, 2024, by = 1)) +
scale_y_continuous(labels = scales::comma) +
labs(
x = "Year",
y = "Number of Registered Vehicles",
title = "Evolution of Electric Vehicles in Brazil",
subtitle = "Source: National Traffic Secretariat, 2024")
ggplot(fleet_2013_2024_clean, aes(x = as.integer(year), y = electric)) +
geom_line(color = "#69b3a2", linewidth = 2) +
theme_bw()+
scale_x_continuous(breaks = seq(2013, 2024, by = 1)) +
scale_y_continuous(labels = scales::comma) +
labs(
x = "Year",
y = "Number of Registered Vehicles",
title = "Evolution of Electric Vehicles in Brazil",
subtitle = "Source: National Traffic Secretariat, 2024")
fleet_2013_2024 <- read_csv("1_raw_data/2_vehicle_fleet/frota_2013_2024.csv")
fleet_2013_2024_clean_id <- read_csv("3_processed_data/fleet_2013_2024_id_clean.csv")
View(fleet_2013_2024)
View(fleet_2013_2024_clean_id)
fleet_2013_2024_clean <- fleet_2013_2024 %>%
mutate(
fuel_category = case_when(
# Ensure "ELETRICO" matches only pure electric vehicles
str_detect(fuel, regex("^ELETRICO$|ELETRICO/FONTE EXTERNA", ignore_case = TRUE)) ~ "electric",
str_detect(fuel, regex("ALCOOL|ETANOL", ignore_case = TRUE)) ~ "ethanol",
str_detect(fuel, regex("GASOLINA", ignore_case = TRUE)) ~ "gasoline",
str_detect(fuel, regex("DIESEL", ignore_case = TRUE)) ~ "diesel",
str_detect(fuel, regex("GAS", ignore_case = TRUE)) ~ "gas",
TRUE ~ "other" # Catch-all for uncategorized entries
)
) %>%
group_by(month, year, date, fuel_category) %>%
summarise(total = sum(total, na.rm = TRUE), .groups = "drop") %>% # Use `.groups = "drop"` for clarity
pivot_wider(
names_from = fuel_category,
values_from = total,
values_fill = list(total = 0) # Explicitly set `values_fill` to avoid ambiguity
)
View(fleet_2013_2024_clean)
fleet_df_nov13 <- read_excel("1_raw_data/2_vehicle_fleet/2013_11_3_frota_uf_municipio_combustivel_nov_2013.xlsx")
fleet_df_nov14 <- read_excel("1_raw_data/2_vehicle_fleet/2014-11_3_frota_uf_municipio_combustivel_nov_2014.xlsx")
fleet_df_nov15 <- read_excel("1_raw_data/2_vehicle_fleet/2015-11_3_Frota_Por_UF_Municipio_Combustivel_NOV_2015.xlsx")
fleet_df_nov16 <- read_excel("1_raw_data/2_vehicle_fleet/2016-11_3_-_combustivel_-novembro_-2016.xlsx")
fleet_df_nov17 <- read_excel("1_raw_data/2_vehicle_fleet/2017-11_frota_por_uf_municipio_combustivel_nov_17.xlsx")
fleet_df_nov18 <- read_excel("1_raw_data/2_vehicle_fleet/2018-11_d_frota_por_uf_municipio_combustivel_novembro_2018.xlsx")
fleet_df_nov19 <- read_excel("1_raw_data/2_vehicle_fleet/2019-11_d_frota_por_uf_municipio_combustivel_novembro_2019.xlsx")
fleet_df_nov20 <- read_excel("1_raw_data/2_vehicle_fleet/2020-11_d_frota_por_uf_municipio_combustivel_novembro_2020.xlsx")
fleet_df_nov21 <- read_excel("1_raw_data/2_vehicle_fleet/2021-11_d_frota_por_uf_municipio_combustivel_novembro_2021.xlsx")
fleet_df_nov22 <- read_excel("1_raw_data/2_vehicle_fleet/2022-11_d_frota_por_uf_municipio_combustivel_novembro_2022.xlsx")
fleet_df_nov23 <- read_excel("1_raw_data/2_vehicle_fleet/2023-11_d_frota_por_uf_municipio_combustivel_novembro_2023.xlsx")
fleet_df_nov24 <- read_excel("1_raw_data/2_vehicle_fleet/2024-11_D_Frota_por_UF_Municipio_COMBUSTIVEL_Novembro_2024.xlsx")
# State data with geographical coordinates
state_df <- geobr::read_state(year = 2020,showProgress = FALSE)
source("./2_code/01_descriptive-demographics.R")
categorias13 <- fleet_df_nov13 %>%
group_by(`Combustível Veículo`) %>%
summarize(total = sum(`Qtd. Veículos`)) %>%
mutate(year = 2013)
categorias14 <- fleet_df_nov14 %>%
group_by(`Combustível Veículo`) %>%
summarize(total = sum(`Qtd. Veículos`)) %>%
mutate(year = 2014)
categorias15 <- fleet_df_nov15 %>%
group_by(`Combustível Veículo`) %>%
summarize(total = sum(`Qtd. Veículos`)) %>%
mutate(year = 2015)
categorias16 <- fleet_df_nov16 %>%
group_by(`Combustível Veículo`) %>%
summarize(total = sum(`Qtd. Veículos`)) %>%
mutate(year = 2016)
categorias17 <- fleet_df_nov17 %>%
group_by(`Combustível Veículo`) %>%
summarize(total = sum(`Qtd. Veículos`)) %>%
mutate(year = 2017)
categorias18 <- fleet_df_nov18 %>%
group_by(`Combustível Veículo`) %>%
summarize(total = sum(`Qtd. Veículos`)) %>%
mutate(year = 2018)
categorias19 <- fleet_df_nov19 %>%
group_by(`Combustível Veículo`) %>%
summarize(total = sum(`Qtd. Veículos`)) %>%
mutate(year = 2019)
categorias20 <- fleet_df_nov20 %>%
group_by(`Combustível Veículo`) %>%
summarize(total = sum(`Qtd. Veículos`)) %>%
mutate(year = 2020)
categorias21 <- fleet_df_nov21 %>%
group_by(`Combustível Veículo`) %>%
summarize(total = sum(`Qtd. Veículos`)) %>%
mutate(year = 2021)
categorias22 <- fleet_df_nov22 %>%
group_by(`Combustível Veículo`) %>%
summarize(total = sum(`Qtd. Veículos`)) %>%
mutate(year = 2022)
categorias23 <- fleet_df_nov23 %>%
group_by(`Combustível Veículo`) %>%
summarize(total = sum(`Qtd. Veículos`)) %>%
mutate(year = 2023)
categorias24 <- fleet_df_nov24 %>%
group_by(`Combustível Veículo`) %>%
summarize(total = sum(`Qtd. Veículos`)) %>%
mutate(year = 2024)
all_categories <- bind_rows(categorias13,
categorias14,
categorias15,
categorias16,
categorias17,
categorias18,
categorias19,
categorias20,
categorias21,
categorias22,
categorias23,
categorias24)
View(all_categories)
View(all_categories)
file_paths <- c(
"1_raw_data/2_vehicle_fleet/2013_11_3_frota_uf_municipio_combustivel_nov_2013.xlsx",
"1_raw_data/2_vehicle_fleet/2014-11_3_frota_uf_municipio_combustivel_nov_2014.xlsx",
"1_raw_data/2_vehicle_fleet/2015-11_3_Frota_Por_UF_Municipio_Combustivel_NOV_2015.xlsx",
"1_raw_data/2_vehicle_fleet/2016-11_3_-_combustivel_-novembro_-2016.xlsx",
"1_raw_data/2_vehicle_fleet/2017-11_frota_por_uf_municipio_combustivel_nov_17.xlsx",
"1_raw_data/2_vehicle_fleet/2018-11_d_frota_por_uf_municipio_combustivel_novembro_2018.xlsx",
"1_raw_data/2_vehicle_fleet/2019-11_d_frota_por_uf_municipio_combustivel_novembro_2019.xlsx",
"1_raw_data/2_vehicle_fleet/2020-11_d_frota_por_uf_municipio_combustivel_novembro_2020.xlsx",
"1_raw_data/2_vehicle_fleet/2021-11_d_frota_por_uf_municipio_combustivel_novembro_2021.xlsx",
"1_raw_data/2_vehicle_fleet/2022-11_d_frota_por_uf_municipio_combustivel_novembro_2022.xlsx",
"1_raw_data/2_vehicle_fleet/2023-11_d_frota_por_uf_municipio_combustivel_novembro_2023.xlsx",
"1_raw_data/2_vehicle_fleet/2024-11_D_Frota_por_UF_Municipio_COMBUSTIVEL_Novembro_2024.xlsx")
create_fleet_analysis_function <- function(file_paths, state_df) {
# Function to process each file
process_file <- function(file_path) {
# Extract year from filename (first 4 characters)
year <- as.numeric(substr(basename(file_path), 1, 4))
fleet_df <- read_excel(file_path)
# Aggregate municipal data at state level
fleet_state <- fleet_df %>%
group_by(UF, `Combustível Veículo`) %>%
summarize(Total = sum(`Qtd. Veículos`), .groups = 'drop')
# Data frame of total vehicles per state
vehicles_per_state <- fleet_state %>%
group_by(UF) %>%
summarise(total_vehicles = sum(Total), .groups = 'drop')
# Categorize vehicles and calculate totals
vehicles_by_type <- fleet_state %>%
mutate(vehicle_type = case_when(
`Combustível Veículo` %in% c("ELETRICO", "ELETRICO/FONTE EXTERNA") ~ "Electric",
grepl("/ELETRICO", `Combustível Veículo`) | `Combustível Veículo` == "ELETRICO/FONTE EXTERNA" ~ "Hybrid",
TRUE ~ "Other"
)) %>%
group_by(UF, vehicle_type) %>%
summarise(total = sum(Total), .groups = 'drop') %>%
pivot_wider(
names_from = vehicle_type,
values_from = total,
values_fill = 0
) %>%
left_join(vehicles_per_state, by = "UF") %>%
mutate(
# Adjust 2021 values
Electric = if(year == 2021) Electric/10 else Electric,
Hybrid = if(year == 2021) Hybrid/10 else Hybrid,
Other = if(year == 2021) Other/10 else Other,
total_vehicles = if(year == 2021) total_vehicles/10 else total_vehicles,
# Calculate percentages
electric_percentage = scales::percent(Electric/total_vehicles, accuracy = 0.01),
hybrid_percentage = scales::percent(Hybrid/total_vehicles, accuracy = 0.01),
year = year
) %>%
filter(UF != "Sem Informação")
return(vehicles_by_type)
}
# Process all files and combine results
all_results <- lapply(file_paths, process_file)
combined_results <- bind_rows(all_results)
# Prepare state data frame
state_df$UF <- state_df$name_state %>%
stringi::stri_trans_general("Latin-ASCII") %>%
toupper()
# Final join with geographic information
final_result <- combined_results %>%
left_join(state_df, by = "UF") %>%
select(year, code_state, abbrev_state, name_state, code_region,
name_region, geom, Electric, Hybrid, Other,
total_vehicles, electric_percentage, hybrid_percentage)
# Store the result in the global environment
assign("fleet_analysis_results", final_result, envir = .GlobalEnv)
return(final_result)
}
create_fleet_analysis_function(file_paths, state_df)
create_fleet_analysis_function(file_paths, state_df)
create_fleet_analysis_function <- function(file_paths, state_df) {
# Function to process each file
process_file <- function(file_path) {
# Extract year from filename (first 4 characters)
year <- as.numeric(substr(basename(file_path), 1, 4))
fleet_df <- read_excel(file_path)
# Aggregate municipal data at state level
fleet_state <- fleet_df %>%
group_by(UF, `Combustível Veículo`) %>%
summarize(Total = sum(`Qtd. Veículos`), .groups = 'drop')
# Data frame of total vehicles per state
vehicles_per_state <- fleet_state %>%
group_by(UF) %>%
summarise(total_vehicles = sum(Total), .groups = 'drop')
# Categorize vehicles and calculate totals
vehicles_by_type <- fleet_state %>%
mutate(vehicle_type = case_when(
`Combustível Veículo` %in% c("ELETRICO", "ELETRICO/FONTE EXTERNA") ~ "Electric",
grepl("/ELETRICO", `Combustível Veículo`) | `Combustível Veículo` == "ELETRICO/FONTE EXTERNA" ~ "Hybrid",
TRUE ~ "Other"
)) %>%
group_by(UF, vehicle_type) %>%
summarise(total = sum(Total), .groups = 'drop') %>%
pivot_wider(
names_from = vehicle_type,
values_from = total,
values_fill = 0
) %>%
left_join(vehicles_per_state, by = "UF") %>%
mutate(
# Adjust 2021 values
Electric = if(year == 2021) Electric/10 else Electric,
Hybrid = if(year == 2021) Hybrid/10 else Hybrid,
Other = if(year == 2021) Other/10 else Other,
total_vehicles = if(year == 2021) total_vehicles/10 else total_vehicles,
# Calculate percentages
electric_percentage = scales::percent(Electric/total_vehicles, accuracy = 0.01),
hybrid_percentage = scales::percent(Hybrid/total_vehicles, accuracy = 0.01),
year = year
) %>%
filter(UF != "Sem Informação")
return(vehicles_by_type)
}
# Process all files and combine results
all_results <- lapply(file_paths, process_file)
combined_results <- bind_rows(all_results)
# Prepare state data frame
state_df$UF <- state_df$name_state %>%
stringi::stri_trans_general("Latin-ASCII") %>%
toupper()
# Final join with geographic information
final_result <- combined_results %>%
left_join(state_df, by = "UF") %>%
select(year, code_state, abbrev_state, name_state, code_region,
name_region, geom, Electric, Hybrid, Other,
total_vehicles, electric_percentage, hybrid_percentage)
# Store the result in the global environment
assign("fleet_analysis_results", final_result, envir = .GlobalEnv)
return(final_result)
}
create_fleet_analysis_function(file_paths, state_df)
source("C:/Users/joaov/Dropbox/R Assignments/master-thesis/2_code/02_demographics.R", echo=TRUE)
ggplot(fleet_2022_ev, aes(x=log(ev_per_capita), y=log(population))) +
geom_point()
ggplot(fleet_2022_ev, aes(x=log(ev_per_capita), y=log(population))) +
geom_point()
source("./2_code/00_packages.R")
ggplot(fleet_2022_ev, aes(x=log(ev_per_capita), y=log(population))) +
geom_point()
fleet_2022_all <- fleet_2013_2024_clean_id %>%
mutate(cars_per_capita = (diesel+ethanol+gasoline+other+electric)/populacao) %>%
filter(year == 2022) %>%
group_by(year, id_municipio) %>%
summarize(cars_per_capita = mean(cars_per_capita),
population    = mean(populacao))
ggplot(fleet_2022_all, aes(x=cars_per_capita, y=log(population))) +
geom_point()
fleet_2013_2024_clean_id <- read_csv("3_processed_data/fleet_2013_2024_id_clean.csv")
fleet_2013_2024_clean_id <- read_csv("3_processed_data/fleet_2013_2024_id_clean.csv")
View(fleet_2013_2024_clean_id)
imported_data <- read_csv("3_processed_data/fleet_2013_2024_id_clean.csv")
fleet_2013_2024_clean <- imported_data %>%
mutate(
fuel_category = case_when(
# Ensure "ELETRICO" matches only pure electric vehicles
str_detect(fuel, regex("^ELETRICO$|ELETRICO/FONTE EXTERNA", ignore_case = TRUE)) ~ "electric",
str_detect(fuel, regex("ALCOOL|ETANOL", ignore_case = TRUE)) ~ "ethanol",
str_detect(fuel, regex("GASOLINA", ignore_case = TRUE)) ~ "gasoline",
str_detect(fuel, regex("DIESEL", ignore_case = TRUE)) ~ "diesel",
str_detect(fuel, regex("GAS", ignore_case = TRUE)) ~ "gas",
TRUE ~ "other" # Catch-all for uncategorized entries
)
) %>%
group_by(month, year, date, fuel_category) %>%
summarise(total = sum(total, na.rm = TRUE), .groups = "drop") %>% # Use `.groups = "drop"` for clarity
pivot_wider(
names_from = fuel_category,
values_from = total,
values_fill = list(total = 0) # Explicitly set `values_fill` to avoid ambiguity
)
fleet_2013_2024_clean
fleet_2013_2024_clean
source("C:/Users/joaov/Dropbox/R Assignments/master-thesis/2_code/02_demographics.R", echo=TRUE)
fleet_2013_2024_clean
fleet_2013_2024_clean <- read_csv("./3_processed_data/fleet_2013_2024_id_clean.csv")
price_df <- read_csv("3_processed_data/fipe_price_monthly_trends_deflated.csv")
income_data_wide_uf <- read_csv("3_processed_data/income_data_wide_uf.csv")
View(fleet_2013_2024_clean)
